[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 5.4.18.Final
[DEBUG] HHH000206: hibernate.properties not found
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [hibernate-configuration-3.0.dtd]
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] Building session factory using provided StandardServiceRegistry
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/database
[INFO ] HHH10001001: Connection properties: {user=root}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 3.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] Unable to use Java 1.7 Connection#getSchema
[DEBUG] Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.MySQL5InnoDBDialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at util.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at util.HiberUtil.getSessionFactory(HiberUtil.java:48)
	at hiberApp.MainApp.<clinit>(MainApp.java:15)
[TRACE] Normalizing identifier quoting [database]
[TRACE] Normalizing identifier quoting [null]
[DEBUG] HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] Binding entity from annotated class: model.Mission
[DEBUG] Ignoring implicit (absent) DiscriminatorColumn
[DEBUG] Import with entity name Mission
[TRACE] Import: Mission -> model.Mission
[TRACE] Import: model.Mission -> model.Mission
[TRACE] Normalizing identifier quoting [MISSIONS]
[TRACE] Normalizing identifier quoting [MISSIONS]
[DEBUG] Bind entity model.Mission on table MISSIONS
[TRACE] Processing annotations of model.Mission.id
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=MISSION_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Mission:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(MISSION_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Mission.astronauts
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [astronauts_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=astronauts_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [astronauts_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='astronauts_KEY', referencedColumn='null', mappedBy='null'}
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='MISSION_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='ASTRONAUT_ID', referencedColumn='', mappedBy=''}
[DEBUG] Collection role: model.Mission.astronauts
[DEBUG] Building property astronauts
[TRACE] Cascading astronauts with save-update
[TRACE] Processing annotations of model.Mission.description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property description with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Mission:description]
[DEBUG] building SimpleValue for description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Building property description
[TRACE] Cascading description with null
[TRACE] Processing annotations of model.Mission.destination
[TRACE] Normalizing identifier quoting [destination]
[TRACE] Normalizing identifier quoting [destination]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=destination, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property destination with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Mission:destination]
[DEBUG] building SimpleValue for destination
[TRACE] Normalizing identifier quoting [destination]
[TRACE] Normalizing identifier quoting [destination]
[TRACE] Normalizing identifier quoting [destination]
[DEBUG] Building property destination
[TRACE] Cascading destination with null
[TRACE] Processing annotations of model.Mission.spacecrafts
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [spacecrafts_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MISSIONS), mappingColumn=spacecrafts_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [spacecrafts_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='spacecrafts_KEY', referencedColumn='null', mappedBy='null'}
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='MISSION_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='SPACECRAFT_ID', referencedColumn='', mappedBy=''}
[DEBUG] Collection role: model.Mission.spacecrafts
[DEBUG] Building property spacecrafts
[TRACE] Cascading spacecrafts with save-update
[DEBUG] Binding entity from annotated class: model.TransportFlight
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='TRANSPORT_FLIGHT_ID', referencedColumn='null', mappedBy='null'}
[TRACE] Subclass joined column(s) created
[DEBUG] Import with entity name TransportFlight
[TRACE] Import: TransportFlight -> model.TransportFlight
[TRACE] Import: model.TransportFlight -> model.TransportFlight
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHTS]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHTS]
[DEBUG] Bind entity model.TransportFlight on table TRANSPORT_FLIGHTS
[TRACE] Processing annotations of model.TransportFlight.cargos
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='TRANSPORT_FLIGHT_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [cargos]
[TRACE] Normalizing identifier quoting [cargos]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRANSPORT_FLIGHTS), mappingColumn=cargos, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRANSPORT_FLIGHTS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRANSPORT_FLIGHTS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [cargos_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRANSPORT_FLIGHTS), mappingColumn=cargos_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [cargos_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='cargos_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] Collection role: model.TransportFlight.cargos
[DEBUG] Building property cargos
[TRACE] Cascading cargos with save-update
[DEBUG] Binding entity from annotated class: model.ResearchMission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='RESEARCH_MISSION_ID', referencedColumn='null', mappedBy='null'}
[TRACE] Subclass joined column(s) created
[DEBUG] Import with entity name ResearchMission
[TRACE] Import: ResearchMission -> model.ResearchMission
[TRACE] Import: model.ResearchMission -> model.ResearchMission
[TRACE] Normalizing identifier quoting [RESEARCH_MISSIONS]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSIONS]
[DEBUG] Bind entity model.ResearchMission on table RESEARCH_MISSIONS
[TRACE] Processing annotations of model.ResearchMission.tasks
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='RESEARCH_MISSION_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [tasks]
[TRACE] Normalizing identifier quoting [tasks]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RESEARCH_MISSIONS), mappingColumn=tasks, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RESEARCH_MISSIONS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RESEARCH_MISSIONS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tasks_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RESEARCH_MISSIONS), mappingColumn=tasks_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [tasks_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='tasks_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[DEBUG] Collection role: model.ResearchMission.tasks
[DEBUG] Building property tasks
[TRACE] Cascading tasks with save-update
[DEBUG] Binding entity from annotated class: model.Cargo
[WARN ] HHH000137: Root entity should not hold a PrimaryKeyJoinColum(s), will be ignored: model.Cargo
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Cargo
[TRACE] Import: Cargo -> model.Cargo
[TRACE] Import: model.Cargo -> model.Cargo
[TRACE] Normalizing identifier quoting [CARGOS]
[TRACE] Normalizing identifier quoting [CARGOS]
[DEBUG] Bind entity model.Cargo on table CARGOS
[TRACE] Processing annotations of model.Cargo.id
[TRACE] Normalizing identifier quoting [CARGO_ID]
[TRACE] Normalizing identifier quoting [CARGO_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CARGOS), mappingColumn=CARGO_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Cargo:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [CARGO_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CARGO_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Cargo.description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CARGOS), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property description with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Cargo:description]
[DEBUG] building SimpleValue for description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Building property description
[TRACE] Cascading description with null
[TRACE] Processing annotations of model.Cargo.type
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CARGOS), mappingColumn=type, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property type with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Cargo:type]
[DEBUG] building SimpleValue for type
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Building property type
[TRACE] Cascading type with null
[DEBUG] Binding entity from annotated class: model.Spacecraft
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Spacecraft
[TRACE] Import: Spacecraft -> model.Spacecraft
[TRACE] Import: model.Spacecraft -> model.Spacecraft
[TRACE] Normalizing identifier quoting [SPACECRAFTS]
[TRACE] Normalizing identifier quoting [SPACECRAFTS]
[DEBUG] Bind entity model.Spacecraft on table SPACECRAFTS
[TRACE] Processing annotations of model.Spacecraft.id
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=SPACECRAFT_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Spacecraft:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(SPACECRAFT_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Spacecraft.capacity
[TRACE] Normalizing identifier quoting [capacity]
[TRACE] Normalizing identifier quoting [capacity]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property capacity with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Spacecraft:capacity]
[DEBUG] building SimpleValue for capacity
[TRACE] Normalizing identifier quoting [capacity]
[TRACE] Normalizing identifier quoting [capacity]
[TRACE] Normalizing identifier quoting [capacity]
[DEBUG] Building property capacity
[TRACE] Cascading capacity with null
[TRACE] Processing annotations of model.Spacecraft.missions
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [missions_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=missions_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [missions_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='missions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='spacecrafts'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='spacecrafts'}
[DEBUG] Collection role: model.Spacecraft.missions
[DEBUG] Building property missions
[TRACE] Cascading missions with none
[TRACE] Processing annotations of model.Spacecraft.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Spacecraft:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model.Spacecraft.numberOfCrewMembers
[TRACE] Normalizing identifier quoting [numberOfCrewMembers]
[TRACE] Normalizing identifier quoting [numberOfCrewMembers]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=numberOfCrewMembers, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property numberOfCrewMembers with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Spacecraft:numberOfCrewMembers]
[DEBUG] building SimpleValue for numberOfCrewMembers
[TRACE] Normalizing identifier quoting [numberOfCrewMembers]
[TRACE] Normalizing identifier quoting [numberOfCrewMembers]
[TRACE] Normalizing identifier quoting [numberOfCrewMembers]
[DEBUG] Building property numberOfCrewMembers
[TRACE] Cascading numberOfCrewMembers with null
[TRACE] Processing annotations of model.Spacecraft.yearOfProduction
[TRACE] Normalizing identifier quoting [yearOfProduction]
[TRACE] Normalizing identifier quoting [yearOfProduction]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SPACECRAFTS), mappingColumn=yearOfProduction, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property yearOfProduction with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Spacecraft:yearOfProduction]
[DEBUG] building SimpleValue for yearOfProduction
[TRACE] Normalizing identifier quoting [yearOfProduction]
[TRACE] Normalizing identifier quoting [yearOfProduction]
[TRACE] Normalizing identifier quoting [yearOfProduction]
[DEBUG] Building property yearOfProduction
[TRACE] Cascading yearOfProduction with null
[DEBUG] Binding entity from annotated class: model.Task
[WARN ] HHH000137: Root entity should not hold a PrimaryKeyJoinColum(s), will be ignored: model.Task
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Task
[TRACE] Import: Task -> model.Task
[TRACE] Import: model.Task -> model.Task
[TRACE] Normalizing identifier quoting [TASKS]
[TRACE] Normalizing identifier quoting [TASKS]
[DEBUG] Bind entity model.Task on table TASKS
[TRACE] Processing annotations of model.Task.id
[TRACE] Normalizing identifier quoting [TASK_ID]
[TRACE] Normalizing identifier quoting [TASK_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TASKS), mappingColumn=TASK_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Task:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [TASK_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(TASK_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Task.description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TASKS), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property description with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Task:description]
[DEBUG] building SimpleValue for description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Building property description
[TRACE] Cascading description with null
[TRACE] Processing annotations of model.Task.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TASKS), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Task:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[DEBUG] Binding entity from annotated class: model.Astronaut
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Astronaut
[TRACE] Import: Astronaut -> model.Astronaut
[TRACE] Import: model.Astronaut -> model.Astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUTS]
[TRACE] Normalizing identifier quoting [ASTRONAUTS]
[DEBUG] Bind entity model.Astronaut on table ASTRONAUTS
[TRACE] Processing annotations of model.Astronaut.id
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=ASTRONAUT_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ASTRONAUT_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Astronaut.fName
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=fName, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property fName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:fName]
[DEBUG] building SimpleValue for fName
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[TRACE] Normalizing identifier quoting [fName]
[DEBUG] Building property fName
[TRACE] Cascading fName with null
[TRACE] Processing annotations of model.Astronaut.lName
[TRACE] Normalizing identifier quoting [lName]
[TRACE] Normalizing identifier quoting [lName]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=lName, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property lName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:lName]
[DEBUG] building SimpleValue for lName
[TRACE] Normalizing identifier quoting [lName]
[TRACE] Normalizing identifier quoting [lName]
[TRACE] Normalizing identifier quoting [lName]
[DEBUG] Building property lName
[TRACE] Cascading lName with null
[TRACE] Processing annotations of model.Astronaut.missionCount
[TRACE] Normalizing identifier quoting [missionCount]
[TRACE] Normalizing identifier quoting [missionCount]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=missionCount, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property missionCount with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:missionCount]
[DEBUG] building SimpleValue for missionCount
[TRACE] Normalizing identifier quoting [missionCount]
[TRACE] Normalizing identifier quoting [missionCount]
[TRACE] Normalizing identifier quoting [missionCount]
[DEBUG] Building property missionCount
[TRACE] Cascading missionCount with null
[TRACE] Processing annotations of model.Astronaut.missions
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [missions_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=missions_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [missions_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='missions_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='astronauts'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='astronauts'}
[DEBUG] Collection role: model.Astronaut.missions
[DEBUG] Building property missions
[TRACE] Cascading missions with none
[TRACE] Processing annotations of model.Astronaut.rank
[TRACE] Normalizing identifier quoting [rank]
[TRACE] Normalizing identifier quoting [rank]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=rank, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property rank with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:rank]
[DEBUG] building SimpleValue for rank
[TRACE] Normalizing identifier quoting [rank]
[TRACE] Normalizing identifier quoting [rank]
[TRACE] Normalizing identifier quoting [rank]
[DEBUG] Building property rank
[TRACE] Cascading rank with null
[TRACE] Processing annotations of model.Astronaut.spaceWalksCount
[TRACE] Normalizing identifier quoting [spaceWalksCount]
[TRACE] Normalizing identifier quoting [spaceWalksCount]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ASTRONAUTS), mappingColumn=spaceWalksCount, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property spaceWalksCount with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Astronaut:spaceWalksCount]
[DEBUG] building SimpleValue for spaceWalksCount
[TRACE] Normalizing identifier quoting [spaceWalksCount]
[TRACE] Normalizing identifier quoting [spaceWalksCount]
[TRACE] Normalizing identifier quoting [spaceWalksCount]
[DEBUG] Building property spaceWalksCount
[TRACE] Cascading spaceWalksCount with null
[DEBUG] Binding entity from annotated class: model.Role
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Role
[TRACE] Import: Role -> model.Role
[TRACE] Import: model.Role -> model.Role
[TRACE] Normalizing identifier quoting [ROLES]
[TRACE] Normalizing identifier quoting [ROLES]
[DEBUG] Bind entity model.Role on table ROLES
[TRACE] Processing annotations of model.Role.id
[TRACE] Normalizing identifier quoting [ROLE_ID]
[TRACE] Normalizing identifier quoting [ROLE_ID]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=ROLE_ID, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Role:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [ROLE_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(ROLE_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Role.astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='ASTRONAUT_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [astronaut]
[TRACE] Normalizing identifier quoting [astronaut]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=astronaut, insertable=true, updatable=true, unique=false}
[TRACE] Fetching astronaut with JOIN
[DEBUG] Building property astronaut
[TRACE] Cascading astronaut with save-update
[TRACE] Processing annotations of model.Role.mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='MISSION_ID', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [mission]
[TRACE] Normalizing identifier quoting [mission]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=mission, insertable=true, updatable=true, unique=false}
[TRACE] Fetching mission with JOIN
[DEBUG] Building property mission
[TRACE] Cascading mission with save-update
[TRACE] Processing annotations of model.Role.role
[TRACE] Normalizing identifier quoting [role]
[TRACE] Normalizing identifier quoting [role]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=role, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property role with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Role:role]
[DEBUG] building SimpleValue for role
[TRACE] Normalizing identifier quoting [role]
[TRACE] Normalizing identifier quoting [role]
[TRACE] Normalizing identifier quoting [role]
[DEBUG] Building property role
[TRACE] Cascading role with null
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for description
[DEBUG] Starting fillSimpleValue for destination
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for description
[DEBUG] Starting fillSimpleValue for type
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for capacity
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for numberOfCrewMembers
[DEBUG] Starting fillSimpleValue for yearOfProduction
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for description
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for fName
[DEBUG] Starting fillSimpleValue for lName
[DEBUG] Starting fillSimpleValue for missionCount
[DEBUG] Starting fillSimpleValue for rank
[DEBUG] Starting fillSimpleValue for spaceWalksCount
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for role
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Forcing column [mission_id] to be non-null as it is part of the primary key for table [missions]
[DEBUG] Forcing column [transport_flight_id] to be non-null as it is part of the primary key for table [transport_flights]
[DEBUG] Forcing column [research_mission_id] to be non-null as it is part of the primary key for table [research_missions]
[DEBUG] Forcing column [cargo_id] to be non-null as it is part of the primary key for table [cargos]
[DEBUG] Forcing column [spacecraft_id] to be non-null as it is part of the primary key for table [spacecrafts]
[DEBUG] Forcing column [task_id] to be non-null as it is part of the primary key for table [tasks]
[DEBUG] Forcing column [astronaut_id] to be non-null as it is part of the primary key for table [astronauts]
[DEBUG] Forcing column [role_id] to be non-null as it is part of the primary key for table [roles]
[DEBUG] Second pass for collection: model.ResearchMission.tasks
[DEBUG] Binding a OneToMany: model.ResearchMission.tasks through a foreign key
[DEBUG] Mapping collection: model.ResearchMission.tasks -> TASKS
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Mapped collection key: RESEARCH_MISSION_ID, one-to-many: model.Task
[DEBUG] Second pass for collection: model.TransportFlight.cargos
[DEBUG] Binding a OneToMany: model.TransportFlight.cargos through a foreign key
[DEBUG] Mapping collection: model.TransportFlight.cargos -> CARGOS
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Mapped collection key: TRANSPORT_FLIGHT_ID, one-to-many: model.Cargo
[DEBUG] Second pass for collection: model.Mission.spacecrafts
[DEBUG] Binding as ManyToMany: model.Mission.spacecrafts
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [MISSION_SPACECRAFTS]
[TRACE] Normalizing identifier quoting [MISSION_SPACECRAFTS]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Forcing column [mission_id] to be non-null as it is part of the primary key for table [mission_spacecrafts]
[DEBUG] Forcing column [spacecraft_id] to be non-null as it is part of the primary key for table [mission_spacecrafts]
[DEBUG] Mapped collection key: MISSION_ID, element: SPACECRAFT_ID
[DEBUG] Second pass for collection: model.Mission.astronauts
[DEBUG] Binding as ManyToMany: model.Mission.astronauts
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [MISSIONS_ASTRONAUTS]
[TRACE] Normalizing identifier quoting [MISSIONS_ASTRONAUTS]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [MISSION_ID]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Forcing column [mission_id] to be non-null as it is part of the primary key for table [missions_astronauts]
[DEBUG] Forcing column [astronaut_id] to be non-null as it is part of the primary key for table [missions_astronauts]
[DEBUG] Mapped collection key: MISSION_ID, element: ASTRONAUT_ID
[DEBUG] Second pass for collection: model.Spacecraft.missions
[DEBUG] Binding as ManyToMany: model.Spacecraft.missions
[DEBUG] Retrieving property model.Mission.spacecrafts
[DEBUG] Mapped collection key: SPACECRAFT_ID, element: MISSION_ID
[DEBUG] Second pass for collection: model.Astronaut.missions
[DEBUG] Binding as ManyToMany: model.Astronaut.missions
[DEBUG] Retrieving property model.Mission.astronauts
[DEBUG] Mapped collection key: ASTRONAUT_ID, element: MISSION_ID
[DEBUG] Resolving reference to class: model.TransportFlight
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Resolving reference to class: model.Spacecraft
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.Astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Resolving reference to class: model.Astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.ResearchMission
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Resolving reference to class: model.TransportFlight
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[DEBUG] Resolving reference to class: model.Spacecraft
[TRACE] Normalizing identifier quoting [SPACECRAFT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.Astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Resolving reference to class: model.Astronaut
[TRACE] Normalizing identifier quoting [ASTRONAUT_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [MISSION_ID]
[DEBUG] Resolving reference to class: model.ResearchMission
[TRACE] Normalizing identifier quoting [RESEARCH_MISSION_ID]
[DEBUG] Resolving reference to class: model.Mission
[TRACE] Normalizing identifier quoting [TRANSPORT_FLIGHT_ID]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: disabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: null
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[DEBUG] JPA compliance - query : disabled
[DEBUG] JPA compliance - closed-handling : disabled
[DEBUG] JPA compliance - lists : disabled
[DEBUG] JPA compliance - transactions : disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\out\production\HiberLab2022;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\hibernate-core-5.4.18.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\log4j-1.2.16.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\txw2-2.3.1.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\javassist-3.24.0-GA.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\javax.activation-api-1.2.0.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\hibernate-jpamodelgen-5.4.18.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\mysql-connector-java-5.1.6.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\dom4j-2.1.3.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\javax.persistence-api-2.2-javadoc.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\antlr-2.7.7.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\jboss-logging-3.3.2.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\classmate-1.5.1.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\mchange-commons-java-0.2.15.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\jaxb-runtime-2.3.1.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\c3p0-0.9.5.3.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\jaxb-api-2.3.1.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\stax-ex-1.8.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\istack-commons-runtime-3.0.7.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\javax.persistence-api-2.2.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\slf4j-api-1.7.7.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\hibernate-c3p0-5.4.18.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\hibernate-core-5.4.18.Final-javadoc.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\jandex-2.1.3.Final.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\byte-buddy-1.10.10.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\slf4j-log4j12-1.7.7.jar;C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt\lib\FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=PL, sun.boot.library.path=C:\Users\Marcin\Desktop\IOR_projekt\openjdk-11+28_windows-x64_bin\jdk-11\bin, sun.java.command=hiberApp.MainApp, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Marcin, hibernate.c3p0.max_statements=10, user.language=pl, java.specification.vendor=Oracle Corporation, java.version.date=2018-09-25, java.home=C:\Users\Marcin\Desktop\IOR_projekt\openjdk-11+28_windows-x64_bin\jdk-11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11+28, user.name=Marcin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/database, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Marcin\AppData\Local\Temp\, java.version=11, user.dir=C:\Users\Marcin\Desktop\IOR_projekt\Hibernate\IOR_Projekt, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@24934262, java.library.path=C:\Users\Marcin\Desktop\IOR_projekt\openjdk-11+28_windows-x64_bin\jdk-11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Eclipse Adoptium\jdk-17.0.2.8-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MATLAB\R2021b\runtime\win64;C:\Program Files\MATLAB\R2021b\bin;C:\Users\Marcin\AppData\Local\Programs\Python\Python310\Scripts;C:\Users\Marcin\AppData\Local\Programs\Python\Python310;C:\msys64\mingw64\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\HP\Common\HPDestPlgIn\;C:\Program Files (x86)\HP\IdrsOCR_15.2.10.1114\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\TortoiseGit\bin;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\PowerShell\7\;C:\Users\Marcin\AppData\Local\Microsoft\WindowsApps;D:\Users\Marcin\AppData\Local\Programs\MiKTeX\miktex\bin\x64\;C:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\Users\Marcin\AppData\Local\Programs\Python\Python310\Scripts;C:\Program Files (x86)\HP\Common\HPDestPlgIn\;C:\Program Files\Azure Data Studio\bin;C:\Users\Marcin\.dotnet\tools;C:\Users\Marcin\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.3\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11+28, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model.Spacecraft] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Spacecraft
[DEBUG] Not known whether passed class name [model.Spacecraft] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Spacecraft
[INFO ] HHH000182: No default (no-argument) constructor for class: model.Spacecraft (class must be instantiated by Interceptor)
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
[TRACE] Skipping duplicate registration of path [capacity], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [missions], existing type = [org.hibernate.type.SetType(model.Spacecraft.missions)], incoming type = [org.hibernate.type.SetType(model.Spacecraft.missions)]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [numberOfCrewMembers], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [yearOfProduction], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Astronaut] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Astronaut
[DEBUG] Not known whether passed class name [model.Astronaut] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Astronaut
[INFO ] HHH000182: No default (no-argument) constructor for class: model.Astronaut (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [fName], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [lName], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [missionCount], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [missions], existing type = [org.hibernate.type.SetType(model.Astronaut.missions)], incoming type = [org.hibernate.type.SetType(model.Astronaut.missions)]
[TRACE] Skipping duplicate registration of path [rank], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [spaceWalksCount], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Mission] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Mission
[DEBUG] Not known whether passed class name [model.TransportFlight] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.TransportFlight
[DEBUG] Not known whether passed class name [model.TransportFlight] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.TransportFlight
[INFO ] HHH000182: No default (no-argument) constructor for class: model.TransportFlight (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [astronauts], existing type = [org.hibernate.type.SetType(model.Mission.astronauts)], incoming type = [org.hibernate.type.SetType(model.Mission.astronauts)]
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [destination], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [spacecrafts], existing type = [org.hibernate.type.SetType(model.Mission.spacecrafts)], incoming type = [org.hibernate.type.SetType(model.Mission.spacecrafts)]
[TRACE] Skipping duplicate registration of path [cargos], existing type = [org.hibernate.type.SetType(model.TransportFlight.cargos)], incoming type = [org.hibernate.type.SetType(model.TransportFlight.cargos)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.ResearchMission] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.ResearchMission
[DEBUG] Not known whether passed class name [model.ResearchMission] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.ResearchMission
[INFO ] HHH000182: No default (no-argument) constructor for class: model.ResearchMission (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [astronauts], existing type = [org.hibernate.type.SetType(model.Mission.astronauts)], incoming type = [org.hibernate.type.SetType(model.Mission.astronauts)]
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [destination], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [spacecrafts], existing type = [org.hibernate.type.SetType(model.Mission.spacecrafts)], incoming type = [org.hibernate.type.SetType(model.Mission.spacecrafts)]
[TRACE] Skipping duplicate registration of path [tasks], existing type = [org.hibernate.type.SetType(model.ResearchMission.tasks)], incoming type = [org.hibernate.type.SetType(model.ResearchMission.tasks)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Mission] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Mission
[INFO ] HHH000182: No default (no-argument) constructor for class: model.Mission (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [astronauts], existing type = [org.hibernate.type.SetType(model.Mission.astronauts)], incoming type = [org.hibernate.type.SetType(model.Mission.astronauts)]
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [destination], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [spacecrafts], existing type = [org.hibernate.type.SetType(model.Mission.spacecrafts)], incoming type = [org.hibernate.type.SetType(model.Mission.spacecrafts)]
[TRACE] Skipping duplicate registration of path [cargos], existing type = [org.hibernate.type.SetType(model.TransportFlight.cargos)], incoming type = [org.hibernate.type.SetType(model.TransportFlight.cargos)]
[TRACE] Skipping duplicate registration of path [tasks], existing type = [org.hibernate.type.SetType(model.ResearchMission.tasks)], incoming type = [org.hibernate.type.SetType(model.ResearchMission.tasks)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Task] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
[DEBUG] Not known whether passed class name [model.Task] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Task
[INFO ] HHH000182: No default (no-argument) constructor for class: model.Task (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Role] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Role
[DEBUG] Not known whether passed class name [model.Role] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Role
[TRACE] Skipping duplicate registration of path [astronaut.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [mission.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [astronaut], existing type = [org.hibernate.type.ManyToOneType(model.Astronaut)], incoming type = [org.hibernate.type.ManyToOneType(model.Astronaut)]
[TRACE] Skipping duplicate registration of path [astronaut.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [astronaut.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [mission], existing type = [org.hibernate.type.ManyToOneType(model.Mission)], incoming type = [org.hibernate.type.ManyToOneType(model.Mission)]
[TRACE] Skipping duplicate registration of path [mission.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [mission.id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[TRACE] Skipping duplicate registration of path [role], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Not known whether passed class name [model.Cargo] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Cargo
[DEBUG] Not known whether passed class name [model.Cargo] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Cargo
[INFO ] HHH000182: No default (no-argument) constructor for class: model.Cargo (class must be instantiated by Interceptor)
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@c260bdc], incoming type = [org.hibernate.type.StringType@c260bdc]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@1b065145], incoming type = [org.hibernate.type.IntegerType@1b065145]
[DEBUG] Static SQL for collection: model.Mission.spacecrafts
[DEBUG]  Row insert: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (?, ?)
[DEBUG]  Row update: update MISSION_SPACECRAFTS set SPACECRAFT_ID=? where MISSION_ID=? and SPACECRAFT_ID=?
[DEBUG]  Row delete: delete from MISSION_SPACECRAFTS where MISSION_ID=? and SPACECRAFT_ID=?
[DEBUG]  One-shot delete: delete from MISSION_SPACECRAFTS where MISSION_ID=?
[DEBUG] Static SQL for collection: model.Spacecraft.missions
[DEBUG]  Row insert: insert into MISSION_SPACECRAFTS (SPACECRAFT_ID, MISSION_ID) values (?, ?)
[DEBUG]  Row update: update MISSION_SPACECRAFTS set MISSION_ID=? where SPACECRAFT_ID=? and MISSION_ID=?
[DEBUG]  Row delete: delete from MISSION_SPACECRAFTS where SPACECRAFT_ID=? and MISSION_ID=?
[DEBUG]  One-shot delete: delete from MISSION_SPACECRAFTS where SPACECRAFT_ID=?
[DEBUG] Static SQL for collection: model.Astronaut.missions
[DEBUG]  Row insert: insert into MISSIONS_ASTRONAUTS (ASTRONAUT_ID, MISSION_ID) values (?, ?)
[DEBUG]  Row update: update MISSIONS_ASTRONAUTS set MISSION_ID=? where ASTRONAUT_ID=? and MISSION_ID=?
[DEBUG]  Row delete: delete from MISSIONS_ASTRONAUTS where ASTRONAUT_ID=? and MISSION_ID=?
[DEBUG]  One-shot delete: delete from MISSIONS_ASTRONAUTS where ASTRONAUT_ID=?
[DEBUG] Static SQL for collection: model.ResearchMission.tasks
[DEBUG]  Row insert: update TASKS set RESEARCH_MISSION_ID=? where TASK_ID=?
[DEBUG]  Row update: update TASKS set  where TASK_ID=?
[DEBUG]  Row delete: update TASKS set RESEARCH_MISSION_ID=null where RESEARCH_MISSION_ID=? and TASK_ID=?
[DEBUG]  One-shot delete: update TASKS set RESEARCH_MISSION_ID=null where RESEARCH_MISSION_ID=?
[DEBUG] Static SQL for collection: model.Mission.astronauts
[DEBUG]  Row insert: insert into MISSIONS_ASTRONAUTS (MISSION_ID, ASTRONAUT_ID) values (?, ?)
[DEBUG]  Row update: update MISSIONS_ASTRONAUTS set ASTRONAUT_ID=? where MISSION_ID=? and ASTRONAUT_ID=?
[DEBUG]  Row delete: delete from MISSIONS_ASTRONAUTS where MISSION_ID=? and ASTRONAUT_ID=?
[DEBUG]  One-shot delete: delete from MISSIONS_ASTRONAUTS where MISSION_ID=?
[DEBUG] Static SQL for collection: model.TransportFlight.cargos
[DEBUG]  Row insert: update CARGOS set TRANSPORT_FLIGHT_ID=? where CARGO_ID=?
[DEBUG]  Row update: update CARGOS set  where CARGO_ID=?
[DEBUG]  Row delete: update CARGOS set TRANSPORT_FLIGHT_ID=null where TRANSPORT_FLIGHT_ID=? and CARGO_ID=?
[DEBUG]  One-shot delete: update CARGOS set TRANSPORT_FLIGHT_ID=null where TRANSPORT_FLIGHT_ID=?
[TRACE] Ignoring subclass attribute definition [model.Mission.astronauts] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.description] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.destination] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.spacecrafts] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.astronauts] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.description] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.destination] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Mission.spacecrafts] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model.Spacecraft
[DEBUG]  Version select: select SPACECRAFT_ID from SPACECRAFTS where SPACECRAFT_ID =?
[DEBUG]  Snapshot select: select spacecraft_.SPACECRAFT_ID, spacecraft_.capacity as capacity2_7_, spacecraft_.name as name3_7_, spacecraft_.numberOfCrewMembers as numberof4_7_, spacecraft_.yearOfProduction as yearofpr5_7_ from SPACECRAFTS spacecraft_ where spacecraft_.SPACECRAFT_ID=?
[DEBUG]  Insert 0: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction, SPACECRAFT_ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update SPACECRAFTS set capacity=?, name=?, numberOfCrewMembers=?, yearOfProduction=? where SPACECRAFT_ID=?
[DEBUG]  Delete 0: delete from SPACECRAFTS where SPACECRAFT_ID=?
[DEBUG]  Identity insert: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Spacecraft
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed3df3b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dae3b7
[TRACE] .. Registering AssociationKey : AssociationKey(table=SPACECRAFTS, columns={SPACECRAFT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dae3b7
[TRACE] >> Starting entity identifier : model.Spacecraft
[DEBUG] Visiting attribute path : capacity
[TRACE] >> Starting attribute Attribute(name=capacity, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=capacity, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[TRACE] >> Starting attribute Attribute(name=missions, type=java.util.Set(model.Spacecraft.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7affc159]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72bdd7c7]
[TRACE] << Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Spacecraft.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : numberOfCrewMembers
[TRACE] >> Starting attribute Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[DEBUG] Visiting attribute path : yearOfProduction
[TRACE] >> Starting attribute Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dae3b7
[TRACE]  Finished root entity : model.Spacecraft
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Spacecraft)
    - Returns
       - EntityReturnImpl(entity=model.Spacecraft, querySpaceUid=<gen:0>, path=model.Spacecraft)
          - CollectionAttributeFetchImpl(collection=model.Spacecraft.missions, querySpaceUid=<gen:1>, path=model.Spacecraft.missions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:2>, path=model.Spacecraft.missions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Spacecraft)
          - SQL table alias mapping - spacecraft0_
          - alias suffix - 0_
          - suffixed key columns - {spacecra1_7_0_}

[DEBUG] Static select for entity model.Spacecraft [NONE]: select spacecraft0_.SPACECRAFT_ID as spacecra1_7_0_, spacecraft0_.capacity as capacity2_7_0_, spacecraft0_.name as name3_7_0_, spacecraft0_.numberOfCrewMembers as numberof4_7_0_, spacecraft0_.yearOfProduction as yearofpr5_7_0_ from SPACECRAFTS spacecraft0_ where spacecraft0_.SPACECRAFT_ID=?
[TRACE]  Starting root entity : model.Spacecraft
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f15f50]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52b46d52
[TRACE] .. Registering AssociationKey : AssociationKey(table=SPACECRAFTS, columns={SPACECRAFT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52b46d52
[TRACE] >> Starting entity identifier : model.Spacecraft
[DEBUG] Visiting attribute path : capacity
[TRACE] >> Starting attribute Attribute(name=capacity, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=capacity, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[TRACE] >> Starting attribute Attribute(name=missions, type=java.util.Set(model.Spacecraft.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7327a447]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67022ea]
[TRACE] << Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Spacecraft.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : numberOfCrewMembers
[TRACE] >> Starting attribute Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[DEBUG] Visiting attribute path : yearOfProduction
[TRACE] >> Starting attribute Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52b46d52
[TRACE]  Finished root entity : model.Spacecraft
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Spacecraft)
    - Returns
       - EntityReturnImpl(entity=model.Spacecraft, querySpaceUid=<gen:0>, path=model.Spacecraft)
          - CollectionAttributeFetchImpl(collection=model.Spacecraft.missions, querySpaceUid=<gen:1>, path=model.Spacecraft.missions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:2>, path=model.Spacecraft.missions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Spacecraft)
          - SQL table alias mapping - spacecraft0_
          - alias suffix - 0_
          - suffixed key columns - {spacecra1_7_0_}

[DEBUG] Static select for entity model.Spacecraft [READ]: select spacecraft0_.SPACECRAFT_ID as spacecra1_7_0_, spacecraft0_.capacity as capacity2_7_0_, spacecraft0_.name as name3_7_0_, spacecraft0_.numberOfCrewMembers as numberof4_7_0_, spacecraft0_.yearOfProduction as yearofpr5_7_0_ from SPACECRAFTS spacecraft0_ where spacecraft0_.SPACECRAFT_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Spacecraft: select spacecraft0_.SPACECRAFT_ID as spacecra1_7_0_, spacecraft0_.capacity as capacity2_7_0_, spacecraft0_.name as name3_7_0_, spacecraft0_.numberOfCrewMembers as numberof4_7_0_, spacecraft0_.yearOfProduction as yearofpr5_7_0_ from SPACECRAFTS spacecraft0_ where spacecraft0_.SPACECRAFT_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Spacecraft: select spacecraft0_.SPACECRAFT_ID as spacecra1_7_0_, spacecraft0_.capacity as capacity2_7_0_, spacecraft0_.name as name3_7_0_, spacecraft0_.numberOfCrewMembers as numberof4_7_0_, spacecraft0_.yearOfProduction as yearofpr5_7_0_ from SPACECRAFTS spacecraft0_ where spacecraft0_.SPACECRAFT_ID=?
[DEBUG] Static SQL for entity: model.Astronaut
[DEBUG]  Version select: select ASTRONAUT_ID from ASTRONAUTS where ASTRONAUT_ID =?
[DEBUG]  Snapshot select: select astronaut_.ASTRONAUT_ID, astronaut_.fName as fname2_0_, astronaut_.lName as lname3_0_, astronaut_.missionCount as missionc4_0_, astronaut_.rank as rank5_0_, astronaut_.spaceWalksCount as spacewal6_0_ from ASTRONAUTS astronaut_ where astronaut_.ASTRONAUT_ID=?
[DEBUG]  Insert 0: insert into ASTRONAUTS (fName, lName, missionCount, rank, spaceWalksCount, ASTRONAUT_ID) values (?, ?, ?, ?, ?, ?)
[DEBUG]  Update 0: update ASTRONAUTS set fName=?, lName=?, missionCount=?, rank=?, spaceWalksCount=? where ASTRONAUT_ID=?
[DEBUG]  Delete 0: delete from ASTRONAUTS where ASTRONAUT_ID=?
[DEBUG]  Identity insert: insert into ASTRONAUTS (fName, lName, missionCount, rank, spaceWalksCount) values (?, ?, ?, ?, ?)
[TRACE]  Starting root entity : model.Astronaut
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e1fd62b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7112ce6
[TRACE] .. Registering AssociationKey : AssociationKey(table=ASTRONAUTS, columns={ASTRONAUT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7112ce6
[TRACE] >> Starting entity identifier : model.Astronaut
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : lName
[TRACE] >> Starting attribute Attribute(name=lName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lName, type=string [non-identifier])
[DEBUG] Visiting attribute path : missionCount
[TRACE] >> Starting attribute Attribute(name=missionCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=missionCount, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[TRACE] >> Starting attribute Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@558b4942]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30ec7d21]
[TRACE] << Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : rank
[TRACE] >> Starting attribute Attribute(name=rank, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=rank, type=string [non-identifier])
[DEBUG] Visiting attribute path : spaceWalksCount
[TRACE] >> Starting attribute Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7112ce6
[TRACE]  Finished root entity : model.Astronaut
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Astronaut)
    - Returns
       - EntityReturnImpl(entity=model.Astronaut, querySpaceUid=<gen:0>, path=model.Astronaut)
          - CollectionAttributeFetchImpl(collection=model.Astronaut.missions, querySpaceUid=<gen:1>, path=model.Astronaut.missions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:2>, path=model.Astronaut.missions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Astronaut)
          - SQL table alias mapping - astronaut0_
          - alias suffix - 0_
          - suffixed key columns - {astronau1_0_0_}

[DEBUG] Static select for entity model.Astronaut [NONE]: select astronaut0_.ASTRONAUT_ID as astronau1_0_0_, astronaut0_.fName as fname2_0_0_, astronaut0_.lName as lname3_0_0_, astronaut0_.missionCount as missionc4_0_0_, astronaut0_.rank as rank5_0_0_, astronaut0_.spaceWalksCount as spacewal6_0_0_ from ASTRONAUTS astronaut0_ where astronaut0_.ASTRONAUT_ID=?
[TRACE]  Starting root entity : model.Astronaut
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70025b99]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7efa3f63
[TRACE] .. Registering AssociationKey : AssociationKey(table=ASTRONAUTS, columns={ASTRONAUT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7efa3f63
[TRACE] >> Starting entity identifier : model.Astronaut
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : lName
[TRACE] >> Starting attribute Attribute(name=lName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lName, type=string [non-identifier])
[DEBUG] Visiting attribute path : missionCount
[TRACE] >> Starting attribute Attribute(name=missionCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=missionCount, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[TRACE] >> Starting attribute Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7134b8a7]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2262d6d5]
[TRACE] << Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : rank
[TRACE] >> Starting attribute Attribute(name=rank, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=rank, type=string [non-identifier])
[DEBUG] Visiting attribute path : spaceWalksCount
[TRACE] >> Starting attribute Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7efa3f63
[TRACE]  Finished root entity : model.Astronaut
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Astronaut)
    - Returns
       - EntityReturnImpl(entity=model.Astronaut, querySpaceUid=<gen:0>, path=model.Astronaut)
          - CollectionAttributeFetchImpl(collection=model.Astronaut.missions, querySpaceUid=<gen:1>, path=model.Astronaut.missions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:2>, path=model.Astronaut.missions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Astronaut)
          - SQL table alias mapping - astronaut0_
          - alias suffix - 0_
          - suffixed key columns - {astronau1_0_0_}

[DEBUG] Static select for entity model.Astronaut [READ]: select astronaut0_.ASTRONAUT_ID as astronau1_0_0_, astronaut0_.fName as fname2_0_0_, astronaut0_.lName as lname3_0_0_, astronaut0_.missionCount as missionc4_0_0_, astronaut0_.rank as rank5_0_0_, astronaut0_.spaceWalksCount as spacewal6_0_0_ from ASTRONAUTS astronaut0_ where astronaut0_.ASTRONAUT_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Astronaut: select astronaut0_.ASTRONAUT_ID as astronau1_0_0_, astronaut0_.fName as fname2_0_0_, astronaut0_.lName as lname3_0_0_, astronaut0_.missionCount as missionc4_0_0_, astronaut0_.rank as rank5_0_0_, astronaut0_.spaceWalksCount as spacewal6_0_0_ from ASTRONAUTS astronaut0_ where astronaut0_.ASTRONAUT_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Astronaut: select astronaut0_.ASTRONAUT_ID as astronau1_0_0_, astronaut0_.fName as fname2_0_0_, astronaut0_.lName as lname3_0_0_, astronaut0_.missionCount as missionc4_0_0_, astronaut0_.rank as rank5_0_0_, astronaut0_.spaceWalksCount as spacewal6_0_0_ from ASTRONAUTS astronaut0_ where astronaut0_.ASTRONAUT_ID=?
[DEBUG] Static SQL for entity: model.TransportFlight
[DEBUG]  Version select: select MISSION_ID from MISSIONS where MISSION_ID =?
[DEBUG]  Snapshot select: select transportf_.TRANSPORT_FLIGHT_ID, transportf_1_.description as descript2_3_, transportf_1_.destination as destinat3_3_ from TRANSPORT_FLIGHTS transportf_ inner join MISSIONS transportf_1_ on transportf_.TRANSPORT_FLIGHT_ID=transportf_1_.MISSION_ID where transportf_.TRANSPORT_FLIGHT_ID=?
[DEBUG]  Insert 0: insert into MISSIONS (description, destination, MISSION_ID) values (?, ?, ?)
[DEBUG]  Update 0: update MISSIONS set description=?, destination=? where MISSION_ID=?
[DEBUG]  Delete 0: delete from MISSIONS where MISSION_ID=?
[DEBUG]  Insert 1: insert into TRANSPORT_FLIGHTS (TRANSPORT_FLIGHT_ID) values (?)
[DEBUG]  Update 1: null
[DEBUG]  Delete 1: delete from TRANSPORT_FLIGHTS where TRANSPORT_FLIGHT_ID=?
[DEBUG]  Identity insert: insert into MISSIONS (description, destination) values (?, ?)
[TRACE]  Starting root entity : model.TransportFlight
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3560d4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ba3d4b6
[TRACE] .. Registering AssociationKey : AssociationKey(table=TRANSPORT_FLIGHTS, columns={TRANSPORT_FLIGHT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ba3d4b6
[TRACE] >> Starting entity identifier : model.TransportFlight
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51b77cdf]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@441fbe89]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6088451e]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45ab3bdd]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f10f633]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1642eeae]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ba3d4b6
[TRACE]  Finished root entity : model.TransportFlight
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.TransportFlight)
    - Returns
       - EntityReturnImpl(entity=model.TransportFlight, querySpaceUid=<gen:0>, path=model.TransportFlight)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.TransportFlight.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.TransportFlight.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.TransportFlight.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.TransportFlight.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:5>, path=model.TransportFlight.cargos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:6>, path=model.TransportFlight.cargos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.TransportFlight)
          - SQL table alias mapping - transportf0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.TransportFlight [NONE]: select transportf0_.TRANSPORT_FLIGHT_ID as mission_1_3_0_, transportf0_1_.description as descript2_3_0_, transportf0_1_.destination as destinat3_3_0_ from TRANSPORT_FLIGHTS transportf0_ inner join MISSIONS transportf0_1_ on transportf0_.TRANSPORT_FLIGHT_ID=transportf0_1_.MISSION_ID where transportf0_.TRANSPORT_FLIGHT_ID=?
[TRACE]  Starting root entity : model.TransportFlight
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3440e9cd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@28a9494b
[TRACE] .. Registering AssociationKey : AssociationKey(table=TRANSPORT_FLIGHTS, columns={TRANSPORT_FLIGHT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@28a9494b
[TRACE] >> Starting entity identifier : model.TransportFlight
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a09303]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1163a27]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@322ba549]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502a4156]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5416f8db]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1377c]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@28a9494b
[TRACE]  Finished root entity : model.TransportFlight
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.TransportFlight)
    - Returns
       - EntityReturnImpl(entity=model.TransportFlight, querySpaceUid=<gen:0>, path=model.TransportFlight)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.TransportFlight.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.TransportFlight.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.TransportFlight.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.TransportFlight.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:5>, path=model.TransportFlight.cargos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:6>, path=model.TransportFlight.cargos.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.TransportFlight)
          - SQL table alias mapping - transportf0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.TransportFlight [READ]: select transportf0_.TRANSPORT_FLIGHT_ID as mission_1_3_0_, transportf0_1_.description as descript2_3_0_, transportf0_1_.destination as destinat3_3_0_ from TRANSPORT_FLIGHTS transportf0_ inner join MISSIONS transportf0_1_ on transportf0_.TRANSPORT_FLIGHT_ID=transportf0_1_.MISSION_ID where transportf0_.TRANSPORT_FLIGHT_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.TransportFlight: select transportf0_.TRANSPORT_FLIGHT_ID as mission_1_3_0_, transportf0_1_.description as descript2_3_0_, transportf0_1_.destination as destinat3_3_0_ from TRANSPORT_FLIGHTS transportf0_ inner join MISSIONS transportf0_1_ on transportf0_.TRANSPORT_FLIGHT_ID=transportf0_1_.MISSION_ID where transportf0_.TRANSPORT_FLIGHT_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.TransportFlight: select transportf0_.TRANSPORT_FLIGHT_ID as mission_1_3_0_, transportf0_1_.description as descript2_3_0_, transportf0_1_.destination as destinat3_3_0_ from TRANSPORT_FLIGHTS transportf0_ inner join MISSIONS transportf0_1_ on transportf0_.TRANSPORT_FLIGHT_ID=transportf0_1_.MISSION_ID where transportf0_.TRANSPORT_FLIGHT_ID=?
[DEBUG] Static SQL for entity: model.ResearchMission
[DEBUG]  Version select: select MISSION_ID from MISSIONS where MISSION_ID =?
[DEBUG]  Snapshot select: select researchmi_.RESEARCH_MISSION_ID, researchmi_1_.description as descript2_3_, researchmi_1_.destination as destinat3_3_ from RESEARCH_MISSIONS researchmi_ inner join MISSIONS researchmi_1_ on researchmi_.RESEARCH_MISSION_ID=researchmi_1_.MISSION_ID where researchmi_.RESEARCH_MISSION_ID=?
[DEBUG]  Insert 0: insert into MISSIONS (description, destination, MISSION_ID) values (?, ?, ?)
[DEBUG]  Update 0: update MISSIONS set description=?, destination=? where MISSION_ID=?
[DEBUG]  Delete 0: delete from MISSIONS where MISSION_ID=?
[DEBUG]  Insert 1: insert into RESEARCH_MISSIONS (RESEARCH_MISSION_ID) values (?)
[DEBUG]  Update 1: null
[DEBUG]  Delete 1: delete from RESEARCH_MISSIONS where RESEARCH_MISSION_ID=?
[DEBUG]  Identity insert: insert into MISSIONS (description, destination) values (?, ?)
[TRACE]  Starting root entity : model.ResearchMission
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0fd744]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@92d1782
[TRACE] .. Registering AssociationKey : AssociationKey(table=RESEARCH_MISSIONS, columns={RESEARCH_MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@92d1782
[TRACE] >> Starting entity identifier : model.ResearchMission
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a1ef65c]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72976b4]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@726934e2]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1319bc2a]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e280403]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f85fa4]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@92d1782
[TRACE]  Finished root entity : model.ResearchMission
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.ResearchMission)
    - Returns
       - EntityReturnImpl(entity=model.ResearchMission, querySpaceUid=<gen:0>, path=model.ResearchMission)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.ResearchMission.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.ResearchMission.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.ResearchMission.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.ResearchMission.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:5>, path=model.ResearchMission.tasks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:6>, path=model.ResearchMission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.ResearchMission)
          - SQL table alias mapping - researchmi0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.ResearchMission [NONE]: select researchmi0_.RESEARCH_MISSION_ID as mission_1_3_0_, researchmi0_1_.description as descript2_3_0_, researchmi0_1_.destination as destinat3_3_0_ from RESEARCH_MISSIONS researchmi0_ inner join MISSIONS researchmi0_1_ on researchmi0_.RESEARCH_MISSION_ID=researchmi0_1_.MISSION_ID where researchmi0_.RESEARCH_MISSION_ID=?
[TRACE]  Starting root entity : model.ResearchMission
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798dad3d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27abb6ca
[TRACE] .. Registering AssociationKey : AssociationKey(table=RESEARCH_MISSIONS, columns={RESEARCH_MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27abb6ca
[TRACE] >> Starting entity identifier : model.ResearchMission
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@696db620]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6968c1d6]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d986d83]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f991c]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a7e365]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ceee4b6]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27abb6ca
[TRACE]  Finished root entity : model.ResearchMission
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.ResearchMission)
    - Returns
       - EntityReturnImpl(entity=model.ResearchMission, querySpaceUid=<gen:0>, path=model.ResearchMission)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.ResearchMission.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.ResearchMission.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.ResearchMission.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.ResearchMission.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:5>, path=model.ResearchMission.tasks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:6>, path=model.ResearchMission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.ResearchMission)
          - SQL table alias mapping - researchmi0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.ResearchMission [READ]: select researchmi0_.RESEARCH_MISSION_ID as mission_1_3_0_, researchmi0_1_.description as descript2_3_0_, researchmi0_1_.destination as destinat3_3_0_ from RESEARCH_MISSIONS researchmi0_ inner join MISSIONS researchmi0_1_ on researchmi0_.RESEARCH_MISSION_ID=researchmi0_1_.MISSION_ID where researchmi0_.RESEARCH_MISSION_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.ResearchMission: select researchmi0_.RESEARCH_MISSION_ID as mission_1_3_0_, researchmi0_1_.description as descript2_3_0_, researchmi0_1_.destination as destinat3_3_0_ from RESEARCH_MISSIONS researchmi0_ inner join MISSIONS researchmi0_1_ on researchmi0_.RESEARCH_MISSION_ID=researchmi0_1_.MISSION_ID where researchmi0_.RESEARCH_MISSION_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.ResearchMission: select researchmi0_.RESEARCH_MISSION_ID as mission_1_3_0_, researchmi0_1_.description as descript2_3_0_, researchmi0_1_.destination as destinat3_3_0_ from RESEARCH_MISSIONS researchmi0_ inner join MISSIONS researchmi0_1_ on researchmi0_.RESEARCH_MISSION_ID=researchmi0_1_.MISSION_ID where researchmi0_.RESEARCH_MISSION_ID=?
[DEBUG] Static SQL for entity: model.Mission
[DEBUG]  Version select: select MISSION_ID from MISSIONS where MISSION_ID =?
[DEBUG]  Snapshot select: select mission_.MISSION_ID, mission_.description as descript2_3_, mission_.destination as destinat3_3_ from MISSIONS mission_ where mission_.MISSION_ID=?
[DEBUG]  Insert 0: insert into MISSIONS (description, destination, MISSION_ID) values (?, ?, ?)
[DEBUG]  Update 0: update MISSIONS set description=?, destination=? where MISSION_ID=?
[DEBUG]  Delete 0: delete from MISSIONS where MISSION_ID=?
[DEBUG]  Identity insert: insert into MISSIONS (description, destination) values (?, ?)
[TRACE]  Starting root entity : model.Mission
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a470dd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968bcec
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSIONS, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968bcec
[TRACE] >> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5568c66f]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e784320]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f6bf8aa]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c8ac77]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bdf]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cad79bc]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c63762b]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9eccc4]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968bcec
[TRACE]  Finished root entity : model.Mission
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Mission)
    - Returns
       - EntityReturnImpl(entity=model.Mission, querySpaceUid=<gen:0>, path=model.Mission)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.Mission.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.Mission.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.Mission.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.Mission.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:5>, path=model.Mission.cargos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:6>, path=model.Mission.cargos.<elements>)
          - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:7>, path=model.Mission.tasks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:8>, path=model.Mission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Mission)
          - SQL table alias mapping - mission0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.Mission [NONE]: select mission0_.MISSION_ID as mission_1_3_0_, mission0_.description as descript2_3_0_, mission0_.destination as destinat3_3_0_, case when mission0_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission0_2_.RESEARCH_MISSION_ID is not null then 2 when mission0_.MISSION_ID is not null then 0 end as clazz_0_ from MISSIONS mission0_ left outer join TRANSPORT_FLIGHTS mission0_1_ on mission0_.MISSION_ID=mission0_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission0_2_ on mission0_.MISSION_ID=mission0_2_.RESEARCH_MISSION_ID where mission0_.MISSION_ID=?
[TRACE]  Starting root entity : model.Mission
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68e02f33]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64942607
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSIONS, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64942607
[TRACE] >> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d48e998]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cfac39f]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@158ae284]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50eb4a2c]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a256d80]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3069a360]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7235f92b]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7885776b]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64942607
[TRACE]  Finished root entity : model.Mission
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Mission)
    - Returns
       - EntityReturnImpl(entity=model.Mission, querySpaceUid=<gen:0>, path=model.Mission)
          - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:1>, path=model.Mission.astronauts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:2>, path=model.Mission.astronauts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:3>, path=model.Mission.spacecrafts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:4>, path=model.Mission.spacecrafts.<elements>)
          - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:5>, path=model.Mission.cargos)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:6>, path=model.Mission.cargos.<elements>)
          - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:7>, path=model.Mission.tasks)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:8>, path=model.Mission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Mission)
          - SQL table alias mapping - mission0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_3_0_}

[DEBUG] Static select for entity model.Mission [READ]: select mission0_.MISSION_ID as mission_1_3_0_, mission0_.description as descript2_3_0_, mission0_.destination as destinat3_3_0_, case when mission0_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission0_2_.RESEARCH_MISSION_ID is not null then 2 when mission0_.MISSION_ID is not null then 0 end as clazz_0_ from MISSIONS mission0_ left outer join TRANSPORT_FLIGHTS mission0_1_ on mission0_.MISSION_ID=mission0_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission0_2_ on mission0_.MISSION_ID=mission0_2_.RESEARCH_MISSION_ID where mission0_.MISSION_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Mission: select mission0_.MISSION_ID as mission_1_3_0_, mission0_.description as descript2_3_0_, mission0_.destination as destinat3_3_0_, case when mission0_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission0_2_.RESEARCH_MISSION_ID is not null then 2 when mission0_.MISSION_ID is not null then 0 end as clazz_0_ from MISSIONS mission0_ left outer join TRANSPORT_FLIGHTS mission0_1_ on mission0_.MISSION_ID=mission0_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission0_2_ on mission0_.MISSION_ID=mission0_2_.RESEARCH_MISSION_ID where mission0_.MISSION_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Mission: select mission0_.MISSION_ID as mission_1_3_0_, mission0_.description as descript2_3_0_, mission0_.destination as destinat3_3_0_, case when mission0_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission0_2_.RESEARCH_MISSION_ID is not null then 2 when mission0_.MISSION_ID is not null then 0 end as clazz_0_ from MISSIONS mission0_ left outer join TRANSPORT_FLIGHTS mission0_1_ on mission0_.MISSION_ID=mission0_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission0_2_ on mission0_.MISSION_ID=mission0_2_.RESEARCH_MISSION_ID where mission0_.MISSION_ID=?
[DEBUG] Static SQL for entity: model.Task
[DEBUG]  Version select: select TASK_ID from TASKS where TASK_ID =?
[DEBUG]  Snapshot select: select task_.TASK_ID, task_.description as descript2_8_, task_.name as name3_8_ from TASKS task_ where task_.TASK_ID=?
[DEBUG]  Insert 0: insert into TASKS (description, name, TASK_ID) values (?, ?, ?)
[DEBUG]  Update 0: update TASKS set description=?, name=? where TASK_ID=?
[DEBUG]  Delete 0: delete from TASKS where TASK_ID=?
[DEBUG]  Identity insert: insert into TASKS (description, name) values (?, ?)
[TRACE]  Starting root entity : model.Task
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@497d4c96]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3472947a
[TRACE] .. Registering AssociationKey : AssociationKey(table=TASKS, columns={TASK_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3472947a
[TRACE] >> Starting entity identifier : model.Task
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3472947a
[TRACE]  Finished root entity : model.Task
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {task_id1_8_0_}

[DEBUG] Static select for entity model.Task [NONE]: select task0_.TASK_ID as task_id1_8_0_, task0_.description as descript2_8_0_, task0_.name as name3_8_0_ from TASKS task0_ where task0_.TASK_ID=?
[TRACE]  Starting root entity : model.Task
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d3cf7e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a3ed300
[TRACE] .. Registering AssociationKey : AssociationKey(table=TASKS, columns={TASK_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a3ed300
[TRACE] >> Starting entity identifier : model.Task
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3a3ed300
[TRACE]  Finished root entity : model.Task
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Task)
    - Returns
       - EntityReturnImpl(entity=model.Task, querySpaceUid=<gen:0>, path=model.Task)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Task)
          - SQL table alias mapping - task0_
          - alias suffix - 0_
          - suffixed key columns - {task_id1_8_0_}

[DEBUG] Static select for entity model.Task [READ]: select task0_.TASK_ID as task_id1_8_0_, task0_.description as descript2_8_0_, task0_.name as name3_8_0_ from TASKS task0_ where task0_.TASK_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Task: select task0_.TASK_ID as task_id1_8_0_, task0_.description as descript2_8_0_, task0_.name as name3_8_0_ from TASKS task0_ where task0_.TASK_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Task: select task0_.TASK_ID as task_id1_8_0_, task0_.description as descript2_8_0_, task0_.name as name3_8_0_ from TASKS task0_ where task0_.TASK_ID=?
[DEBUG] Static SQL for entity: model.Role
[DEBUG]  Version select: select ROLE_ID from ROLES where ROLE_ID =?
[DEBUG]  Snapshot select: select role_.ROLE_ID, role_.ASTRONAUT_ID as astronau3_6_, role_.MISSION_ID as mission_4_6_, role_.role as role2_6_ from ROLES role_ where role_.ROLE_ID=?
[DEBUG]  Insert 0: insert into ROLES (ASTRONAUT_ID, MISSION_ID, role, ROLE_ID) values (?, ?, ?, ?)
[DEBUG]  Update 0: update ROLES set ASTRONAUT_ID=?, MISSION_ID=?, role=? where ROLE_ID=?
[DEBUG]  Delete 0: delete from ROLES where ROLE_ID=?
[DEBUG]  Identity insert: insert into ROLES (ASTRONAUT_ID, MISSION_ID, role) values (?, ?, ?)
[TRACE]  Starting root entity : model.Role
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1984212d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39f5b723
[TRACE] .. Registering AssociationKey : AssociationKey(table=ROLES, columns={ROLE_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39f5b723
[TRACE] >> Starting entity identifier : model.Role
[DEBUG] Visiting attribute path : astronaut
[TRACE] >> Starting attribute Attribute(name=astronaut, type=model.Astronaut [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eaa375c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4fa4f485
[TRACE] .... Registering AssociationKey : AssociationKey(table=ROLES, columns={ASTRONAUT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4fa4f485
[TRACE] >>>> Starting entity identifier : model.Astronaut
[DEBUG] Visiting attribute path : astronaut.fName
[TRACE] >>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.lName
[TRACE] >>>> Starting attribute Attribute(name=lName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=lName, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.missionCount
[TRACE] >>>> Starting attribute Attribute(name=missionCount, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=missionCount, type=integer [non-identifier])
[DEBUG] Visiting attribute path : astronaut.missions
[TRACE] >>>> Starting attribute Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68dd39d2]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a44cfc0]
[TRACE] <<<< Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : astronaut.rank
[TRACE] >>>> Starting attribute Attribute(name=rank, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=rank, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.spaceWalksCount
[TRACE] >>>> Starting attribute Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4fa4f485
[TRACE] << Finishing up attribute : Attribute(name=astronaut, type=model.Astronaut [non-identifier,association])
[DEBUG] Visiting attribute path : mission
[TRACE] >> Starting attribute Attribute(name=mission, type=model.Mission [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e3c26e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@80b122b
[TRACE] .... Registering AssociationKey : AssociationKey(table=ROLES, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@80b122b
[TRACE] >>>> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : mission.astronauts
[TRACE] >>>> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@999b951]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65cf4d6d]
[TRACE] <<<< Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.description
[TRACE] >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : mission.destination
[TRACE] >>>> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : mission.spacecrafts
[TRACE] >>>> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b410308]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0bd001]
[TRACE] <<<< Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.cargos
[TRACE] >>>> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f9cab00]
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10272bbb]
[TRACE] <<<< Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.tasks
[TRACE] >>>> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36d33f4]
[DEBUG] Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16736040]
[TRACE] <<<< Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@80b122b
[TRACE] << Finishing up attribute : Attribute(name=mission, type=model.Mission [non-identifier,association])
[DEBUG] Visiting attribute path : role
[TRACE] >> Starting attribute Attribute(name=role, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=role, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@39f5b723
[TRACE]  Finished root entity : model.Role
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Role)
    - Returns
       - EntityReturnImpl(entity=model.Role, querySpaceUid=<gen:0>, path=model.Role)
          - EntityAttributeFetchImpl(entity=model.Astronaut, querySpaceUid=<gen:1>, path=model.Role.astronaut)
             - CollectionAttributeFetchImpl(collection=model.Astronaut.missions, querySpaceUid=<gen:2>, path=model.Role.astronaut.missions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:3>, path=model.Role.astronaut.missions.<elements>)
          - EntityAttributeFetchImpl(entity=model.Mission, querySpaceUid=<gen:4>, path=model.Role.mission)
             - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:5>, path=model.Role.mission.astronauts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:6>, path=model.Role.mission.astronauts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:7>, path=model.Role.mission.spacecrafts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:8>, path=model.Role.mission.spacecrafts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:9>, path=model.Role.mission.cargos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:10>, path=model.Role.mission.cargos.<elements>)
             - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:11>, path=model.Role.mission.tasks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:12>, path=model.Role.mission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(astronaut)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Astronaut)
                - SQL table alias mapping - astronaut1_
                - alias suffix - 1_
                - suffixed key columns - {astronau1_0_1_}
          - JOIN (JoinDefinedByMetadata(mission)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=model.Mission)
                - SQL table alias mapping - mission2_
                - alias suffix - 2_
                - suffixed key columns - {mission_1_3_2_}

[DEBUG] Static select for entity model.Role [NONE]: select role0_.ROLE_ID as role_id1_6_0_, role0_.ASTRONAUT_ID as astronau3_6_0_, role0_.MISSION_ID as mission_4_6_0_, role0_.role as role2_6_0_, astronaut1_.ASTRONAUT_ID as astronau1_0_1_, astronaut1_.fName as fname2_0_1_, astronaut1_.lName as lname3_0_1_, astronaut1_.missionCount as missionc4_0_1_, astronaut1_.rank as rank5_0_1_, astronaut1_.spaceWalksCount as spacewal6_0_1_, mission2_.MISSION_ID as mission_1_3_2_, mission2_.description as descript2_3_2_, mission2_.destination as destinat3_3_2_, case when mission2_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission2_2_.RESEARCH_MISSION_ID is not null then 2 when mission2_.MISSION_ID is not null then 0 end as clazz_2_ from ROLES role0_ left outer join ASTRONAUTS astronaut1_ on role0_.ASTRONAUT_ID=astronaut1_.ASTRONAUT_ID left outer join MISSIONS mission2_ on role0_.MISSION_ID=mission2_.MISSION_ID left outer join TRANSPORT_FLIGHTS mission2_1_ on mission2_.MISSION_ID=mission2_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission2_2_ on mission2_.MISSION_ID=mission2_2_.RESEARCH_MISSION_ID where role0_.ROLE_ID=?
[TRACE]  Starting root entity : model.Role
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5d1d25]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@550e9be6
[TRACE] .. Registering AssociationKey : AssociationKey(table=ROLES, columns={ROLE_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@550e9be6
[TRACE] >> Starting entity identifier : model.Role
[DEBUG] Visiting attribute path : astronaut
[TRACE] >> Starting attribute Attribute(name=astronaut, type=model.Astronaut [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f96f020]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32eae6f2
[TRACE] .... Registering AssociationKey : AssociationKey(table=ROLES, columns={ASTRONAUT_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32eae6f2
[TRACE] >>>> Starting entity identifier : model.Astronaut
[DEBUG] Visiting attribute path : astronaut.fName
[TRACE] >>>> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.lName
[TRACE] >>>> Starting attribute Attribute(name=lName, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=lName, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.missionCount
[TRACE] >>>> Starting attribute Attribute(name=missionCount, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=missionCount, type=integer [non-identifier])
[DEBUG] Visiting attribute path : astronaut.missions
[TRACE] >>>> Starting attribute Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@26ca61bf]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a0f2b]
[TRACE] <<<< Finishing up attribute : Attribute(name=missions, type=java.util.Set(model.Astronaut.missions) [non-identifier,association])
[DEBUG] Visiting attribute path : astronaut.rank
[TRACE] >>>> Starting attribute Attribute(name=rank, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=rank, type=string [non-identifier])
[DEBUG] Visiting attribute path : astronaut.spaceWalksCount
[TRACE] >>>> Starting attribute Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32eae6f2
[TRACE] << Finishing up attribute : Attribute(name=astronaut, type=model.Astronaut [non-identifier,association])
[DEBUG] Visiting attribute path : mission
[TRACE] >> Starting attribute Attribute(name=mission, type=model.Mission [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fa5f81c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6a1d526c
[TRACE] .... Registering AssociationKey : AssociationKey(table=ROLES, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6a1d526c
[TRACE] >>>> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : mission.astronauts
[TRACE] >>>> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f2f0109]
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@483b0690]
[TRACE] <<<< Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.description
[TRACE] >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : mission.destination
[TRACE] >>>> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : mission.spacecrafts
[TRACE] >>>> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@687e6293]
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6870c3c2]
[TRACE] <<<< Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.cargos
[TRACE] >>>> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fb0a08c]
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf386c]
[TRACE] <<<< Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : mission.tasks
[TRACE] >>>> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4debbf0]
[DEBUG] Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
[TRACE] <<<< Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@6a1d526c
[TRACE] << Finishing up attribute : Attribute(name=mission, type=model.Mission [non-identifier,association])
[DEBUG] Visiting attribute path : role
[TRACE] >> Starting attribute Attribute(name=role, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=role, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@550e9be6
[TRACE]  Finished root entity : model.Role
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Role)
    - Returns
       - EntityReturnImpl(entity=model.Role, querySpaceUid=<gen:0>, path=model.Role)
          - EntityAttributeFetchImpl(entity=model.Astronaut, querySpaceUid=<gen:1>, path=model.Role.astronaut)
             - CollectionAttributeFetchImpl(collection=model.Astronaut.missions, querySpaceUid=<gen:2>, path=model.Role.astronaut.missions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:3>, path=model.Role.astronaut.missions.<elements>)
          - EntityAttributeFetchImpl(entity=model.Mission, querySpaceUid=<gen:4>, path=model.Role.mission)
             - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:5>, path=model.Role.mission.astronauts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:6>, path=model.Role.mission.astronauts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:7>, path=model.Role.mission.spacecrafts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:8>, path=model.Role.mission.spacecrafts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:9>, path=model.Role.mission.cargos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:10>, path=model.Role.mission.cargos.<elements>)
             - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:11>, path=model.Role.mission.tasks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:12>, path=model.Role.mission.tasks.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {role_id1_6_0_}
          - JOIN (JoinDefinedByMetadata(astronaut)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Astronaut)
                - SQL table alias mapping - astronaut1_
                - alias suffix - 1_
                - suffixed key columns - {astronau1_0_1_}
          - JOIN (JoinDefinedByMetadata(mission)) : <gen:0> -> <gen:4>
             - EntityQuerySpaceImpl(uid=<gen:4>, entity=model.Mission)
                - SQL table alias mapping - mission2_
                - alias suffix - 2_
                - suffixed key columns - {mission_1_3_2_}

[DEBUG] Static select for entity model.Role [READ]: select role0_.ROLE_ID as role_id1_6_0_, role0_.ASTRONAUT_ID as astronau3_6_0_, role0_.MISSION_ID as mission_4_6_0_, role0_.role as role2_6_0_, astronaut1_.ASTRONAUT_ID as astronau1_0_1_, astronaut1_.fName as fname2_0_1_, astronaut1_.lName as lname3_0_1_, astronaut1_.missionCount as missionc4_0_1_, astronaut1_.rank as rank5_0_1_, astronaut1_.spaceWalksCount as spacewal6_0_1_, mission2_.MISSION_ID as mission_1_3_2_, mission2_.description as descript2_3_2_, mission2_.destination as destinat3_3_2_, case when mission2_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission2_2_.RESEARCH_MISSION_ID is not null then 2 when mission2_.MISSION_ID is not null then 0 end as clazz_2_ from ROLES role0_ left outer join ASTRONAUTS astronaut1_ on role0_.ASTRONAUT_ID=astronaut1_.ASTRONAUT_ID left outer join MISSIONS mission2_ on role0_.MISSION_ID=mission2_.MISSION_ID left outer join TRANSPORT_FLIGHTS mission2_1_ on mission2_.MISSION_ID=mission2_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission2_2_ on mission2_.MISSION_ID=mission2_2_.RESEARCH_MISSION_ID where role0_.ROLE_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Role: select role0_.ROLE_ID as role_id1_6_0_, role0_.ASTRONAUT_ID as astronau3_6_0_, role0_.MISSION_ID as mission_4_6_0_, role0_.role as role2_6_0_ from ROLES role0_ where role0_.ROLE_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Role: select role0_.ROLE_ID as role_id1_6_0_, role0_.ASTRONAUT_ID as astronau3_6_0_, role0_.MISSION_ID as mission_4_6_0_, role0_.role as role2_6_0_ from ROLES role0_ where role0_.ROLE_ID=?
[DEBUG] Static SQL for entity: model.Cargo
[DEBUG]  Version select: select CARGO_ID from CARGOS where CARGO_ID =?
[DEBUG]  Snapshot select: select cargo_.CARGO_ID, cargo_.description as descript2_1_, cargo_.type as type3_1_ from CARGOS cargo_ where cargo_.CARGO_ID=?
[DEBUG]  Insert 0: insert into CARGOS (description, type, CARGO_ID) values (?, ?, ?)
[DEBUG]  Update 0: update CARGOS set description=?, type=? where CARGO_ID=?
[DEBUG]  Delete 0: delete from CARGOS where CARGO_ID=?
[DEBUG]  Identity insert: insert into CARGOS (description, type) values (?, ?)
[TRACE]  Starting root entity : model.Cargo
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e06f7d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66a5755
[TRACE] .. Registering AssociationKey : AssociationKey(table=CARGOS, columns={CARGO_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66a5755
[TRACE] >> Starting entity identifier : model.Cargo
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66a5755
[TRACE]  Finished root entity : model.Cargo
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Cargo)
    - Returns
       - EntityReturnImpl(entity=model.Cargo, querySpaceUid=<gen:0>, path=model.Cargo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Cargo)
          - SQL table alias mapping - cargo0_
          - alias suffix - 0_
          - suffixed key columns - {cargo_id1_1_0_}

[DEBUG] Static select for entity model.Cargo [NONE]: select cargo0_.CARGO_ID as cargo_id1_1_0_, cargo0_.description as descript2_1_0_, cargo0_.type as type3_1_0_ from CARGOS cargo0_ where cargo0_.CARGO_ID=?
[TRACE]  Starting root entity : model.Cargo
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771a7d53]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d6d480c
[TRACE] .. Registering AssociationKey : AssociationKey(table=CARGOS, columns={CARGO_ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d6d480c
[TRACE] >> Starting entity identifier : model.Cargo
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d6d480c
[TRACE]  Finished root entity : model.Cargo
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Cargo)
    - Returns
       - EntityReturnImpl(entity=model.Cargo, querySpaceUid=<gen:0>, path=model.Cargo)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Cargo)
          - SQL table alias mapping - cargo0_
          - alias suffix - 0_
          - suffixed key columns - {cargo_id1_1_0_}

[DEBUG] Static select for entity model.Cargo [READ]: select cargo0_.CARGO_ID as cargo_id1_1_0_, cargo0_.description as descript2_1_0_, cargo0_.type as type3_1_0_ from CARGOS cargo0_ where cargo0_.CARGO_ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Cargo: select cargo0_.CARGO_ID as cargo_id1_1_0_, cargo0_.description as descript2_1_0_, cargo0_.type as type3_1_0_ from CARGOS cargo0_ where cargo0_.CARGO_ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Cargo: select cargo0_.CARGO_ID as cargo_id1_1_0_, cargo0_.description as descript2_1_0_, cargo0_.type as type3_1_0_ from CARGOS cargo0_ where cargo0_.CARGO_ID=?
[TRACE]  Starting root collection : model.Mission.spacecrafts
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7980cf2c]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0020b1]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@759de304
[TRACE]  Registering AssociationKey : AssociationKey(table=MISSION_SPACECRAFTS, columns={MISSION_ID}) -> null
[TRACE]  Starting collection element graph : model.Mission.spacecrafts
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@769bd849
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSION_SPACECRAFTS, columns={SPACECRAFT_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@769bd849
[TRACE] >> Starting entity identifier : model.Spacecraft
[DEBUG] Visiting attribute path : capacity
[TRACE] >> Starting attribute Attribute(name=capacity, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=capacity, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[DEBUG] Property path deemed to be circular : missions
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : numberOfCrewMembers
[TRACE] >> Starting attribute Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=numberOfCrewMembers, type=integer [non-identifier])
[DEBUG] Visiting attribute path : yearOfProduction
[TRACE] >> Starting attribute Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=yearOfProduction, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@769bd849
[TRACE]  Finished collection element graph : model.Mission.spacecrafts
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@759de304
[TRACE]  Finished root collection : model.Mission.spacecrafts
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Mission.spacecrafts)
    - Returns
       - CollectionReturnImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:0>, path=[model.Mission.spacecrafts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:1>, path=[model.Mission.spacecrafts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Mission.spacecrafts)
          - SQL table alias mapping - spacecraft0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - spacecra1_7_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Spacecraft)
                - SQL table alias mapping - spacecraft1_
                - alias suffix - 1_
                - suffixed key columns - {spacecra1_7_1_}

[DEBUG] Static select for collection model.Mission.spacecrafts: select spacecraft0_.MISSION_ID as mission_1_2_0_, spacecraft0_.SPACECRAFT_ID as spacecra2_2_0_, spacecraft1_.SPACECRAFT_ID as spacecra1_7_1_, spacecraft1_.capacity as capacity2_7_1_, spacecraft1_.name as name3_7_1_, spacecraft1_.numberOfCrewMembers as numberof4_7_1_, spacecraft1_.yearOfProduction as yearofpr5_7_1_ from MISSION_SPACECRAFTS spacecraft0_ inner join SPACECRAFTS spacecraft1_ on spacecraft0_.SPACECRAFT_ID=spacecraft1_.SPACECRAFT_ID where spacecraft0_.MISSION_ID=?
[TRACE]  Starting root collection : model.Spacecraft.missions
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e463f4]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32ec9c90]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@36ab3814
[TRACE]  Registering AssociationKey : AssociationKey(table=MISSION_SPACECRAFTS, columns={SPACECRAFT_ID}) -> null
[TRACE]  Starting collection element graph : model.Spacecraft.missions
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2abbd0d9
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSION_SPACECRAFTS, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2abbd0d9
[TRACE] >> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : astronauts
[TRACE] >> Starting attribute Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b61edb9]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3ff859]
[TRACE] << Finishing up attribute : Attribute(name=astronauts, type=java.util.Set(model.Mission.astronauts) [non-identifier,association])
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[DEBUG] Property path deemed to be circular : spacecrafts
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32bb0072]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@467233e4]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@427a12b6]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6025d790]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2abbd0d9
[TRACE]  Finished collection element graph : model.Spacecraft.missions
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@36ab3814
[TRACE]  Finished root collection : model.Spacecraft.missions
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Spacecraft.missions)
    - Returns
       - CollectionReturnImpl(collection=model.Spacecraft.missions, querySpaceUid=<gen:0>, path=[model.Spacecraft.missions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:1>, path=[model.Spacecraft.missions].<elements>)
             - CollectionAttributeFetchImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:2>, path=[model.Spacecraft.missions].<elements>.astronauts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:3>, path=[model.Spacecraft.missions].<elements>.astronauts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:4>, path=[model.Spacecraft.missions].<elements>.cargos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:5>, path=[model.Spacecraft.missions].<elements>.cargos.<elements>)
             - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:6>, path=[model.Spacecraft.missions].<elements>.tasks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:7>, path=[model.Spacecraft.missions].<elements>.tasks.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Spacecraft.missions)
          - SQL table alias mapping - missions0_
          - alias suffix - 0_
          - suffixed key columns - {spacecra2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - mission_1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Mission)
                - SQL table alias mapping - mission1_
                - alias suffix - 1_
                - suffixed key columns - {mission_1_3_1_}

[DEBUG] Static select for collection model.Spacecraft.missions: select missions0_.SPACECRAFT_ID as spacecra2_2_0_, missions0_.MISSION_ID as mission_1_2_0_, mission1_.MISSION_ID as mission_1_3_1_, mission1_.description as descript2_3_1_, mission1_.destination as destinat3_3_1_, case when mission1_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission1_2_.RESEARCH_MISSION_ID is not null then 2 when mission1_.MISSION_ID is not null then 0 end as clazz_1_ from MISSION_SPACECRAFTS missions0_ inner join MISSIONS mission1_ on missions0_.MISSION_ID=mission1_.MISSION_ID left outer join TRANSPORT_FLIGHTS mission1_1_ on mission1_.MISSION_ID=mission1_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission1_2_ on mission1_.MISSION_ID=mission1_2_.RESEARCH_MISSION_ID where missions0_.SPACECRAFT_ID=?
[TRACE]  Starting root collection : model.Astronaut.missions
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@af7e376]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcd0cdf]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4fb04a72
[TRACE]  Registering AssociationKey : AssociationKey(table=MISSIONS_ASTRONAUTS, columns={ASTRONAUT_ID}) -> null
[TRACE]  Starting collection element graph : model.Astronaut.missions
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1e79d43
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSIONS_ASTRONAUTS, columns={MISSION_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1e79d43
[TRACE] >> Starting entity identifier : model.Mission
[DEBUG] Visiting attribute path : astronauts
[DEBUG] Property path deemed to be circular : astronauts
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : destination
[TRACE] >> Starting attribute Attribute(name=destination, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=destination, type=string [non-identifier])
[DEBUG] Visiting attribute path : spacecrafts
[TRACE] >> Starting attribute Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@343e225a]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a07bf6]
[TRACE] << Finishing up attribute : Attribute(name=spacecrafts, type=java.util.Set(model.Mission.spacecrafts) [non-identifier,association])
[DEBUG] Visiting attribute path : cargos
[TRACE] >> Starting attribute Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c0e426a]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@713ec32d]
[TRACE] << Finishing up attribute : Attribute(name=cargos, type=java.util.Set(model.TransportFlight.cargos) [non-identifier,association])
[DEBUG] Visiting attribute path : tasks
[TRACE] >> Starting attribute Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34d713a2]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36aab105]
[TRACE] << Finishing up attribute : Attribute(name=tasks, type=java.util.Set(model.ResearchMission.tasks) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1e79d43
[TRACE]  Finished collection element graph : model.Astronaut.missions
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4fb04a72
[TRACE]  Finished root collection : model.Astronaut.missions
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Astronaut.missions)
    - Returns
       - CollectionReturnImpl(collection=model.Astronaut.missions, querySpaceUid=<gen:0>, path=[model.Astronaut.missions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Mission, querySpaceUid=<gen:1>, path=[model.Astronaut.missions].<elements>)
             - CollectionAttributeFetchImpl(collection=model.Mission.spacecrafts, querySpaceUid=<gen:2>, path=[model.Astronaut.missions].<elements>.spacecrafts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Spacecraft, querySpaceUid=<gen:3>, path=[model.Astronaut.missions].<elements>.spacecrafts.<elements>)
             - CollectionAttributeFetchImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:4>, path=[model.Astronaut.missions].<elements>.cargos)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:5>, path=[model.Astronaut.missions].<elements>.cargos.<elements>)
             - CollectionAttributeFetchImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:6>, path=[model.Astronaut.missions].<elements>.tasks)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:7>, path=[model.Astronaut.missions].<elements>.tasks.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Astronaut.missions)
          - SQL table alias mapping - missions0_
          - alias suffix - 0_
          - suffixed key columns - {astronau2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - mission_1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Mission)
                - SQL table alias mapping - mission1_
                - alias suffix - 1_
                - suffixed key columns - {mission_1_3_1_}

[DEBUG] Static select for collection model.Astronaut.missions: select missions0_.ASTRONAUT_ID as astronau2_4_0_, missions0_.MISSION_ID as mission_1_4_0_, mission1_.MISSION_ID as mission_1_3_1_, mission1_.description as descript2_3_1_, mission1_.destination as destinat3_3_1_, case when mission1_1_.TRANSPORT_FLIGHT_ID is not null then 1 when mission1_2_.RESEARCH_MISSION_ID is not null then 2 when mission1_.MISSION_ID is not null then 0 end as clazz_1_ from MISSIONS_ASTRONAUTS missions0_ inner join MISSIONS mission1_ on missions0_.MISSION_ID=mission1_.MISSION_ID left outer join TRANSPORT_FLIGHTS mission1_1_ on mission1_.MISSION_ID=mission1_1_.TRANSPORT_FLIGHT_ID left outer join RESEARCH_MISSIONS mission1_2_ on mission1_.MISSION_ID=mission1_2_.RESEARCH_MISSION_ID where missions0_.ASTRONAUT_ID=?
[TRACE]  Starting root collection : model.ResearchMission.tasks
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@889a8a8]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f29353f]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@36f7d7b
[TRACE]  Registering AssociationKey : AssociationKey(table=TASKS, columns={RESEARCH_MISSION_ID}) -> null
[TRACE]  Starting collection element graph : model.ResearchMission.tasks
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@60aec68a
[TRACE] >> Starting entity identifier : model.Task
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@60aec68a
[TRACE]  Finished collection element graph : model.ResearchMission.tasks
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@36f7d7b
[TRACE]  Finished root collection : model.ResearchMission.tasks
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.ResearchMission.tasks)
    - Returns
       - CollectionReturnImpl(collection=model.ResearchMission.tasks, querySpaceUid=<gen:0>, path=[model.ResearchMission.tasks])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Task, querySpaceUid=<gen:1>, path=[model.ResearchMission.tasks].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.ResearchMission.tasks)
          - SQL table alias mapping - tasks0_
          - alias suffix - 0_
          - suffixed key columns - {research4_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - task_id1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Task)
                - SQL table alias mapping - tasks0_
                - alias suffix - 1_
                - suffixed key columns - {task_id1_8_1_}

[DEBUG] Static select for collection model.ResearchMission.tasks: select tasks0_.RESEARCH_MISSION_ID as research4_8_0_, tasks0_.TASK_ID as task_id1_8_0_, tasks0_.TASK_ID as task_id1_8_1_, tasks0_.description as descript2_8_1_, tasks0_.name as name3_8_1_ from TASKS tasks0_ where tasks0_.RESEARCH_MISSION_ID=?
[TRACE]  Starting root collection : model.Mission.astronauts
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d919544]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17dad32f]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@79696332
[TRACE]  Registering AssociationKey : AssociationKey(table=MISSIONS_ASTRONAUTS, columns={MISSION_ID}) -> null
[TRACE]  Starting collection element graph : model.Mission.astronauts
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@ed2f2f6
[TRACE] .. Registering AssociationKey : AssociationKey(table=MISSIONS_ASTRONAUTS, columns={ASTRONAUT_ID}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@ed2f2f6
[TRACE] >> Starting entity identifier : model.Astronaut
[DEBUG] Visiting attribute path : fName
[TRACE] >> Starting attribute Attribute(name=fName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=fName, type=string [non-identifier])
[DEBUG] Visiting attribute path : lName
[TRACE] >> Starting attribute Attribute(name=lName, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lName, type=string [non-identifier])
[DEBUG] Visiting attribute path : missionCount
[TRACE] >> Starting attribute Attribute(name=missionCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=missionCount, type=integer [non-identifier])
[DEBUG] Visiting attribute path : missions
[DEBUG] Property path deemed to be circular : missions
[DEBUG] Visiting attribute path : rank
[TRACE] >> Starting attribute Attribute(name=rank, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=rank, type=string [non-identifier])
[DEBUG] Visiting attribute path : spaceWalksCount
[TRACE] >> Starting attribute Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=spaceWalksCount, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@ed2f2f6
[TRACE]  Finished collection element graph : model.Mission.astronauts
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@79696332
[TRACE]  Finished root collection : model.Mission.astronauts
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Mission.astronauts)
    - Returns
       - CollectionReturnImpl(collection=model.Mission.astronauts, querySpaceUid=<gen:0>, path=[model.Mission.astronauts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Astronaut, querySpaceUid=<gen:1>, path=[model.Mission.astronauts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Mission.astronauts)
          - SQL table alias mapping - astronauts0_
          - alias suffix - 0_
          - suffixed key columns - {mission_1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - astronau1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Astronaut)
                - SQL table alias mapping - astronaut1_
                - alias suffix - 1_
                - suffixed key columns - {astronau1_0_1_}

[DEBUG] Static select for collection model.Mission.astronauts: select astronauts0_.MISSION_ID as mission_1_4_0_, astronauts0_.ASTRONAUT_ID as astronau2_4_0_, astronaut1_.ASTRONAUT_ID as astronau1_0_1_, astronaut1_.fName as fname2_0_1_, astronaut1_.lName as lname3_0_1_, astronaut1_.missionCount as missionc4_0_1_, astronaut1_.rank as rank5_0_1_, astronaut1_.spaceWalksCount as spacewal6_0_1_ from MISSIONS_ASTRONAUTS astronauts0_ inner join ASTRONAUTS astronaut1_ on astronauts0_.ASTRONAUT_ID=astronaut1_.ASTRONAUT_ID where astronauts0_.MISSION_ID=?
[TRACE]  Starting root collection : model.TransportFlight.cargos
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fe87ddd]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eea94a4]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@7c281eb8
[TRACE]  Registering AssociationKey : AssociationKey(table=CARGOS, columns={TRANSPORT_FLIGHT_ID}) -> null
[TRACE]  Starting collection element graph : model.TransportFlight.cargos
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@65f40689
[TRACE] >> Starting entity identifier : model.Cargo
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@65f40689
[TRACE]  Finished collection element graph : model.TransportFlight.cargos
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@7c281eb8
[TRACE]  Finished root collection : model.TransportFlight.cargos
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.TransportFlight.cargos)
    - Returns
       - CollectionReturnImpl(collection=model.TransportFlight.cargos, querySpaceUid=<gen:0>, path=[model.TransportFlight.cargos])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Cargo, querySpaceUid=<gen:1>, path=[model.TransportFlight.cargos].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.TransportFlight.cargos)
          - SQL table alias mapping - cargos0_
          - alias suffix - 0_
          - suffixed key columns - {transpor4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - cargo_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Cargo)
                - SQL table alias mapping - cargos0_
                - alias suffix - 1_
                - suffixed key columns - {cargo_id1_1_1_}

[DEBUG] Static select for collection model.TransportFlight.cargos: select cargos0_.TRANSPORT_FLIGHT_ID as transpor4_1_0_, cargos0_.CARGO_ID as cargo_id1_1_0_, cargos0_.CARGO_ID as cargo_id1_1_1_, cargos0_.description as descript2_1_1_, cargos0_.type as type3_1_1_ from CARGOS cargos0_ where cargos0_.TRANSPORT_FLIGHT_ID=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model.Spacecraft]
[TRACE] Building identifier attribute [Spacecraft.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Spacecraft.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Spacecraft.capacity]
[TRACE] Starting attribute metadata determination [capacity]
[TRACE]     Determined member [private int model.Spacecraft.capacity]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Spacecraft.missions]
[TRACE] Starting attribute metadata determination [missions]
[TRACE]     Determined member [private java.util.Set model.Spacecraft.missions]
[TRACE]     Determined type [name=java.util.Set(model.Spacecraft.missions), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Spacecraft.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Spacecraft.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Spacecraft.numberOfCrewMembers]
[TRACE] Starting attribute metadata determination [numberOfCrewMembers]
[TRACE]     Determined member [private int model.Spacecraft.numberOfCrewMembers]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Spacecraft.yearOfProduction]
[TRACE] Starting attribute metadata determination [yearOfProduction]
[TRACE]     Determined member [private int model.Spacecraft.yearOfProduction]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Completed entity [model.Spacecraft]
[TRACE] Starting entity [model.Astronaut]
[TRACE] Building identifier attribute [Astronaut.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Astronaut.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Astronaut.fName]
[TRACE] Starting attribute metadata determination [fName]
[TRACE]     Determined member [private java.lang.String model.Astronaut.fName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Astronaut.lName]
[TRACE] Starting attribute metadata determination [lName]
[TRACE]     Determined member [private java.lang.String model.Astronaut.lName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Astronaut.missionCount]
[TRACE] Starting attribute metadata determination [missionCount]
[TRACE]     Determined member [private int model.Astronaut.missionCount]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Astronaut.missions]
[TRACE] Starting attribute metadata determination [missions]
[TRACE]     Determined member [private java.util.Set model.Astronaut.missions]
[TRACE]     Determined type [name=java.util.Set(model.Astronaut.missions), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Astronaut.rank]
[TRACE] Starting attribute metadata determination [rank]
[TRACE]     Determined member [private java.lang.String model.Astronaut.rank]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Astronaut.spaceWalksCount]
[TRACE] Starting attribute metadata determination [spaceWalksCount]
[TRACE]     Determined member [private int model.Astronaut.spaceWalksCount]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Completed entity [model.Astronaut]
[TRACE] Starting entity [model.Mission]
[TRACE] Building identifier attribute [Mission.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Mission.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Mission.astronauts]
[TRACE] Starting attribute metadata determination [astronauts]
[TRACE]     Determined member [private java.util.Set model.Mission.astronauts]
[TRACE]     Determined type [name=java.util.Set(model.Mission.astronauts), class=org.hibernate.type.SetType]
[TRACE] Building attribute [Mission.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [private java.lang.String model.Mission.description]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Mission.destination]
[TRACE] Starting attribute metadata determination [destination]
[TRACE]     Determined member [private java.lang.String model.Mission.destination]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Mission.spacecrafts]
[TRACE] Starting attribute metadata determination [spacecrafts]
[TRACE]     Determined member [private java.util.Set model.Mission.spacecrafts]
[TRACE]     Determined type [name=java.util.Set(model.Mission.spacecrafts), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.Mission]
[TRACE] Starting entity [model.TransportFlight]
[TRACE] Building attribute [TransportFlight.cargos]
[TRACE] Starting attribute metadata determination [cargos]
[TRACE]     Determined member [private java.util.Set model.TransportFlight.cargos]
[TRACE]     Determined type [name=java.util.Set(model.TransportFlight.cargos), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.TransportFlight]
[TRACE] Starting entity [model.ResearchMission]
[TRACE] Building attribute [ResearchMission.tasks]
[TRACE] Starting attribute metadata determination [tasks]
[TRACE]     Determined member [private java.util.Set model.ResearchMission.tasks]
[TRACE]     Determined type [name=java.util.Set(model.ResearchMission.tasks), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.ResearchMission]
[TRACE] Starting entity [model.Task]
[TRACE] Building identifier attribute [Task.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Task.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Task.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [private java.lang.String model.Task.description]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Task.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Task.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Task]
[TRACE] Starting entity [model.Role]
[TRACE] Building identifier attribute [Role.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Role.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Role.astronaut]
[TRACE] Starting attribute metadata determination [astronaut]
[TRACE]     Determined member [public model.Astronaut model.Role.astronaut]
[TRACE]     Determined type [name=model.Astronaut, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Role.mission]
[TRACE] Starting attribute metadata determination [mission]
[TRACE]     Determined member [public model.Mission model.Role.mission]
[TRACE]     Determined type [name=model.Mission, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [Role.role]
[TRACE] Starting attribute metadata determination [role]
[TRACE]     Determined member [public java.lang.String model.Role.role]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Role]
[TRACE] Starting entity [model.Cargo]
[TRACE] Building identifier attribute [Cargo.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Cargo.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [Cargo.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [private java.lang.String model.Cargo.description]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [Cargo.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [private java.lang.String model.Cargo.type]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Cargo]
[TRACE] Normalizing identifier quoting [HT_TRANSPORT_FLIGHTS]
[TRACE] Normalizing identifier quoting [HT_RESEARCH_MISSIONS]
[TRACE] Normalizing identifier quoting [HT_MISSIONS]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Normalizing identifier quoting for object name [database]
[TRACE] Rendering unquoted identifier [database] in lower case for use in DatabaseMetaData
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@17229821] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[TRACE] Normalizing identifier quoting for object name [ASTRONAUTS]
[TRACE] Rendering unquoted identifier [ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [CARGOS]
[TRACE] Rendering unquoted identifier [CARGOS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSION_SPACECRAFTS]
[TRACE] Rendering unquoted identifier [MISSION_SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS]
[TRACE] Rendering unquoted identifier [MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS_ASTRONAUTS]
[TRACE] Rendering unquoted identifier [MISSIONS_ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [RESEARCH_MISSIONS]
[TRACE] Rendering unquoted identifier [RESEARCH_MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ROLES]
[TRACE] Rendering unquoted identifier [ROLES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [SPACECRAFTS]
[TRACE] Rendering unquoted identifier [SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TASKS]
[TRACE] Rendering unquoted identifier [TASKS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TRANSPORT_FLIGHTS]
[TRACE] Rendering unquoted identifier [TRANSPORT_FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ASTRONAUTS]
[TRACE] Rendering unquoted identifier [ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null
[TRACE] Normalizing identifier quoting for object name [CARGOS]
[TRACE] Rendering unquoted identifier [CARGOS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSION_SPACECRAFTS]
[TRACE] Rendering unquoted identifier [MISSION_SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS]
[TRACE] Rendering unquoted identifier [MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS_ASTRONAUTS]
[TRACE] Rendering unquoted identifier [MISSIONS_ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [RESEARCH_MISSIONS]
[TRACE] Rendering unquoted identifier [RESEARCH_MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ROLES]
[TRACE] Rendering unquoted identifier [ROLES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [SPACECRAFTS]
[TRACE] Rendering unquoted identifier [SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TASKS]
[TRACE] Rendering unquoted identifier [TASKS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TRANSPORT_FLIGHTS]
[TRACE] Rendering unquoted identifier [TRANSPORT_FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ASTRONAUTS]
[TRACE] Rendering unquoted identifier [ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [CARGOS]
[TRACE] Rendering unquoted identifier [CARGOS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSION_SPACECRAFTS]
[TRACE] Rendering unquoted identifier [MISSION_SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS]
[TRACE] Rendering unquoted identifier [MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [MISSIONS_ASTRONAUTS]
[TRACE] Rendering unquoted identifier [MISSIONS_ASTRONAUTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [RESEARCH_MISSIONS]
[TRACE] Rendering unquoted identifier [RESEARCH_MISSIONS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [ROLES]
[TRACE] Rendering unquoted identifier [ROLES] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [SPACECRAFTS]
[TRACE] Rendering unquoted identifier [SPACECRAFTS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TASKS]
[TRACE] Rendering unquoted identifier [TASKS] in lower case for use in DatabaseMetaData
[TRACE] Normalizing identifier quoting for object name [TRANSPORT_FLIGHTS]
[TRACE] Rendering unquoted identifier [TRANSPORT_FLIGHTS] in lower case for use in DatabaseMetaData
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d2b6960
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: f564d860-f511-4bba-97fe-03137dea83e4 (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Opened Session [e6b7ce39-48d1-43f2-8143-8217cf09808a] at timestamp: 1668682327131
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.Mission#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Wrapped collection in role: model.Mission.astronauts
[TRACE] Wrapped collection in role: model.Mission.spacecrafts
[TRACE] Adding an EntityIdentityInsertAction for [model.Mission] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Mission#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Mission#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Mission (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4262fdeb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Mission#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6048e26a [wrapping: com.mysql.jdbc.JDBC4ResultSet@422ad5e2]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6048e26a [wrapping: com.mysql.jdbc.JDBC4ResultSet@422ad5e2]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4262fdeb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('First journey to Mars from Earth.', 'Mars')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4262fdeb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('First journey to Mars from Earth.', 'Mars')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[DEBUG] Collection found: [model.Mission.astronauts#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.spacecrafts#1], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
[DEBUG] Listing entities:
[DEBUG] model.Mission{spacecrafts=[], astronauts=[], destination=Mars, description=First journey to Mars from Earth., id=1}
[TRACE] Executing flush
[DEBUG] Inserting collection: [model.Mission.astronauts#1]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Mission.spacecrafts#1]
[DEBUG] Collection was empty
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.TransportFlight#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Wrapped collection in role: model.Mission.astronauts
[TRACE] Wrapped collection in role: model.Mission.spacecrafts
[TRACE] Wrapped collection in role: model.TransportFlight.cargos
[TRACE] Adding an EntityIdentityInsertAction for [model.TransportFlight] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.TransportFlight#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.TransportFlight#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.TransportFlight (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@35bfa1bb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.TransportFlight#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7d0100ea [wrapping: com.mysql.jdbc.JDBC4ResultSet@6b321262]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7d0100ea [wrapping: com.mysql.jdbc.JDBC4ResultSet@6b321262]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@35bfa1bb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('Transport flight from New York to Moscow.', 'Moscow')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@35bfa1bb [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('Transport flight from New York to Moscow.', 'Moscow')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.TransportFlight#2]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a1f2a1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@47e85c52: insert into TRANSPORT_FLIGHTS (TRANSPORT_FLIGHT_ID) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.TransportFlight#2]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a1f2a1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@47e85c52: insert into TRANSPORT_FLIGHTS (TRANSPORT_FLIGHT_ID) values (2)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a1f2a1 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@47e85c52: insert into TRANSPORT_FLIGHTS (TRANSPORT_FLIGHT_ID) values (2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.TransportFlight.cargos
[TRACE] Cascading to save or update: model.Cargo
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Cargo
[TRACE] Saving transient instance
[TRACE] Saving [model.Cargo#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Cargo] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Cargo#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Cargo#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Cargo (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2ed9f6f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Cargo#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@79a13920 [wrapping: com.mysql.jdbc.JDBC4ResultSet@251c4280]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@79a13920 [wrapping: com.mysql.jdbc.JDBC4ResultSet@251c4280]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2ed9f6f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values ('Tomato soup', 'food')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2ed9f6f8 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values ('Tomato soup', 'food')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model.Cargo
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Cargo
[TRACE] Saving transient instance
[TRACE] Saving [model.Cargo#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Cargo] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Cargo#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Cargo#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Cargo (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5f61371d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Cargo#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5921b93c [wrapping: com.mysql.jdbc.JDBC4ResultSet@420a8042]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5921b93c [wrapping: com.mysql.jdbc.JDBC4ResultSet@420a8042]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5f61371d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values ('Noodle soup', 'food')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5f61371d [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@40a393f9: insert into CARGOS (description, type) values ('Noodle soup', 'food')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.TransportFlight.cargos
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Saving transient instance
[TRACE] Saving [model.ResearchMission#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Wrapped collection in role: model.Mission.astronauts
[TRACE] Wrapped collection in role: model.Mission.spacecrafts
[TRACE] Wrapped collection in role: model.ResearchMission.tasks
[TRACE] Adding an EntityIdentityInsertAction for [model.ResearchMission] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.ResearchMission#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.ResearchMission#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.ResearchMission (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a7c678b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.ResearchMission#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@168ad26f [wrapping: com.mysql.jdbc.JDBC4ResultSet@28babeca]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@168ad26f [wrapping: com.mysql.jdbc.JDBC4ResultSet@28babeca]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a7c678b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('Transport flight from New York to Moscow.', 'Moscow')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3a7c678b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('Transport flight from New York to Moscow.', 'Moscow')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.ResearchMission#3]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@656a3d6b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@12065ba3: insert into RESEARCH_MISSIONS (RESEARCH_MISSION_ID) values (** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.ResearchMission#3]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@656a3d6b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@12065ba3: insert into RESEARCH_MISSIONS (RESEARCH_MISSION_ID) values (3)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@656a3d6b [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@12065ba3: insert into RESEARCH_MISSIONS (RESEARCH_MISSION_ID) values (3)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.ResearchMission.tasks
[TRACE] Cascading to save or update: model.Task
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Task
[TRACE] Saving transient instance
[TRACE] Saving [model.Task#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Task] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Task#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Task#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Task (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@55acec99 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Task#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f3ca64a [wrapping: com.mysql.jdbc.JDBC4ResultSet@61191222]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@7f3ca64a [wrapping: com.mysql.jdbc.JDBC4ResultSet@61191222]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@55acec99 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values ('Bring swords from armory.', 'Bring weapons')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@55acec99 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values ('Bring swords from armory.', 'Bring weapons')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model.Task
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Task
[TRACE] Saving transient instance
[TRACE] Saving [model.Task#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Task] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Task#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Task#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Task (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64e7d698 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Task#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@401c4250 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2519026b]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@401c4250 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2519026b]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64e7d698 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values ('Create a soup from ingredients.', 'Make soup')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@64e7d698 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@2716c06d: insert into TASKS (description, name) values ('Create a soup from ingredients.', 'Make soup')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.ResearchMission.tasks
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Saving transient instance
[TRACE] Saving [model.Mission#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Wrapped collection in role: model.Mission.astronauts
[TRACE] Wrapped collection in role: model.Mission.spacecrafts
[TRACE] Adding an EntityIdentityInsertAction for [model.Mission] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Mission#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Mission#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Mission (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@16d07cf3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Mission#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@661d6bb6 [wrapping: com.mysql.jdbc.JDBC4ResultSet@16f0ec18]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@661d6bb6 [wrapping: com.mysql.jdbc.JDBC4ResultSet@16f0ec18]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@16d07cf3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('First journey to Wenus from Earth.', 'Wenus')]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@16d07cf3 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@4ffdae3f: insert into MISSIONS (description, destination) values ('First journey to Wenus from Earth.', 'Wenus')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascading to save or update: model.Spacecraft
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Spacecraft
[TRACE] Saving transient instance
[TRACE] Saving [model.Spacecraft#<null>]
[TRACE] Wrapped collection in role: model.Spacecraft.missions
[TRACE] Adding an EntityIdentityInsertAction for [model.Spacecraft] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Spacecraft#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Spacecraft#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Spacecraft (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@385dfb63 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Spacecraft#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@12417468 [wrapping: com.mysql.jdbc.JDBC4ResultSet@364fd4ae]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@12417468 [wrapping: com.mysql.jdbc.JDBC4ResultSet@364fd4ae]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@385dfb63 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (2000, 'Kolo1', 10, 1998)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@385dfb63 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (2000, 'Kolo1', 10, 1998)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Cascading to save or update: model.Spacecraft
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Spacecraft
[TRACE] Saving transient instance
[TRACE] Saving [model.Spacecraft#<null>]
[TRACE] Wrapped collection in role: model.Spacecraft.missions
[TRACE] Adding an EntityIdentityInsertAction for [model.Spacecraft] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Spacecraft#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Spacecraft#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Spacecraft (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3b481bf5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Dehydrating entity: [model.Spacecraft#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@787e4357 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2233cac0]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@787e4357 [wrapping: com.mysql.jdbc.JDBC4ResultSet@2233cac0]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3b481bf5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (2500, 'Kolo2', 12, 1999)]]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3b481bf5 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@221cc0f9: insert into SPACECRAFTS (capacity, name, numberOfCrewMembers, yearOfProduction) values (2500, 'Kolo2', 12, 1999)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.TransportFlight.cargos
[TRACE] Cascading to save or update: model.Cargo
[TRACE] Persistent instance of: model.Cargo
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Cargo#1]
[TRACE] Cascading to save or update: model.Cargo
[TRACE] Persistent instance of: model.Cargo
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Cargo#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.TransportFlight.cargos
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.TransportFlight
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.ResearchMission.tasks
[TRACE] Cascading to save or update: model.Task
[TRACE] Persistent instance of: model.Task
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Task#1]
[TRACE] Cascading to save or update: model.Task
[TRACE] Persistent instance of: model.Task
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Task#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.ResearchMission.tasks
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.ResearchMission
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Mission
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.astronauts
[TRACE] Cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Cascading to save or update: model.Spacecraft
[TRACE] Persistent instance of: model.Spacecraft
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Spacecraft#1]
[TRACE] Cascading to save or update: model.Spacecraft
[TRACE] Persistent instance of: model.Spacecraft
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Spacecraft#2]
[TRACE] Done cascade ACTION_SAVE_UPDATE for collection: model.Mission.spacecrafts
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Mission
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[DEBUG] Collection found: [model.Mission.astronauts#1], was: [model.Mission.astronauts#1] (initialized)
[DEBUG] Collection found: [model.Mission.spacecrafts#1], was: [model.Mission.spacecrafts#1] (initialized)
[DEBUG] Collection found: [model.Mission.astronauts#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.spacecrafts#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.TransportFlight.cargos#2], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.astronauts#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.spacecrafts#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.ResearchMission.tasks#3], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.astronauts#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Mission.spacecrafts#4], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Spacecraft.missions#1], was: [<unreferenced>] (initialized)
[DEBUG] Collection found: [model.Spacecraft.missions#2], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 10 objects
[DEBUG] Flushed: 10 (re)creations, 0 updates, 0 removals to 12 collections
[DEBUG] Listing entities:
[DEBUG] model.Cargo{description=Tomato soup, id=1, type=food}
[DEBUG] model.Cargo{description=Noodle soup, id=2, type=food}
[DEBUG] model.Mission{spacecrafts=[], astronauts=[], destination=Mars, description=First journey to Mars from Earth., id=1}
[DEBUG] model.ResearchMission{spacecrafts=[], astronauts=[], destination=Moscow, description=Transport flight from New York to Moscow., id=3, tasks=[model.Task#1, model.Task#2]}
[DEBUG] model.TransportFlight{spacecrafts=[], astronauts=[], destination=Moscow, description=Transport flight from New York to Moscow., id=2, cargos=[model.Cargo#1, model.Cargo#2]}
[DEBUG] model.Task{name=Bring weapons, description=Bring swords from armory., id=1}
[DEBUG] model.Task{name=Make soup, description=Create a soup from ingredients., id=2}
[DEBUG] model.Mission{spacecrafts=[model.Spacecraft#1, model.Spacecraft#2], astronauts=[], destination=Wenus, description=First journey to Wenus from Earth., id=4}
[DEBUG] model.Spacecraft{numberOfCrewMembers=10, missions=[], name=Kolo1, yearOfProduction=1998, id=1, capacity=2000}
[DEBUG] model.Spacecraft{numberOfCrewMembers=12, missions=[], name=Kolo2, yearOfProduction=1999, id=2, capacity=2500}
[TRACE] Executing flush
[DEBUG] Inserting collection: [model.Mission.astronauts#2]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Mission.spacecrafts#2]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.TransportFlight.cargos#2]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2401856 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=** NOT SPECIFIED ** where CARGO_ID=** NOT SPECIFIED **]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2401856 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=2 where CARGO_ID=1]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2401856 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=2 where CARGO_ID=1]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2a4f8009 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=** NOT SPECIFIED ** where CARGO_ID=** NOT SPECIFIED **]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2a4f8009 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=2 where CARGO_ID=2]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@2a4f8009 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b4116bf: update CARGOS set TRANSPORT_FLIGHT_ID=2 where CARGO_ID=2]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Done inserting collection: 2 rows inserted
[DEBUG] Inserting collection: [model.Mission.astronauts#3]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Mission.spacecrafts#3]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.ResearchMission.tasks#3]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e3f0aea [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=** NOT SPECIFIED ** where TASK_ID=** NOT SPECIFIED **]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e3f0aea [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=3 where TASK_ID=1]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e3f0aea [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=3 where TASK_ID=1]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@69a024a0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=** NOT SPECIFIED ** where TASK_ID=** NOT SPECIFIED **]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@69a024a0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=3 where TASK_ID=2]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@69a024a0 [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@b21ed3: update TASKS set RESEARCH_MISSION_ID=3 where TASK_ID=2]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Done inserting collection: 2 rows inserted
[DEBUG] Inserting collection: [model.Mission.astronauts#4]
[DEBUG] Collection was empty
[DEBUG] Inserting collection: [model.Mission.spacecrafts#4]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@515b9d4a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@515b9d4a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (4, 1)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@515b9d4a [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (4, 1)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32a4ecbe [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32a4ecbe [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (4, 2)]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32a4ecbe [wrapping: com.mysql.jdbc.JDBC4PreparedStatement@56cda464: insert into MISSION_SPACECRAFTS (MISSION_ID, SPACECRAFT_ID) values (4, 2)]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Done inserting collection: 2 rows inserted
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] LogicalConnection#beforeTransactionCompletion
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [e6b7ce39-48d1-43f2-8143-8217cf09808a]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2e71240b]
[DEBUG] HHH000420: Closing un-released batch
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Releasing JDBC resources
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] Closing logical connection
[TRACE] Logical connection closed
